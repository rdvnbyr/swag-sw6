{"version":3,"file":"index-tXSw-CgH.js","sources":["../../../app/administration/src/module/sw-extension-store/component/sw-extension-store-listing-filter/sw-extension-store-listing-filter.html.twig","../../../app/administration/src/module/sw-extension-store/component/sw-extension-store-listing-filter/index.js"],"sourcesContent":["{% block sw_extension_store_listing_filter %}\n    <div class=\"sw-extension-store-listing-filter\">\n        <template v-if=\"!isLoading\">\n            {% block sw_extension_store_listing_filter_content %}\n                {% block sw_extension_store_listing_filter_sorting %}\n                    <sw-meteor-single-select\n                        class=\"sw-extension-store-listing-filter__sorting\"\n                        size=\"small\"\n                        :label=\"$t('sw-extension.store.listing.sort')\"\n                        :options=\"sortingOptions\"\n                        value-property=\"orderIdentifier\"\n                        :value=\"sortingValue\"\n                        @update:value=\"setSelectedSorting\"\n                    />\n                {% endblock %}\n\n                {% block sw_extension_store_listing_all_filters %}\n                    <sw-meteor-single-select\n                        v-for=\"filter in listingFiltersSorted\"\n                        :key=\"filter.name\"\n                        class=\"sw-extension-store-listing-filter__filters\"\n                        size=\"small\"\n                        :label=\"filter.label\"\n                        :options=\"getOptionsForFilter(filter)\"\n                        :value=\"getValueForFilter(filter)\"\n                        @update:value=\"changeValueForFilter(filter, $event)\"\n                    >\n                        <template\n                            v-if=\"filter.type === 'category'\"\n                            #result-label-property=\"{ item, valueProperty }\"\n                        >\n                            {% block sw_extension_store_listing_filter_category_filter_result %}\n                                <div\n                                    v-if=\"item[valueProperty] !== null\"\n                                    :class=\"{ 'is--root-category': isRootCategory(item) }\"\n                                    :style=\"{ 'padding-left': isRootCategory(item) ? '0': `${categoryDepth(item)}em` }\"\n                                >\n                                    {{ item.label }}\n                                </div>\n                            {% endblock %}\n                        </template>\n                    </sw-meteor-single-select>\n                {% endblock %}\n            {% endblock %}\n        </template>\n        <template v-else>\n            <sw-loader />\n        </template>\n    </div>\n{% endblock %}\n","import template from './sw-extension-store-listing-filter.html.twig';\nimport './sw-extension-store-listing-filter.scss';\n\nconst { Criteria } = Shopware.Data;\n\nexport default {\n    template,\n\n    mixins: [\n        'notification',\n    ],\n\n    inject: ['extensionStoreDataService'],\n\n    data() {\n        return {\n            isLoading: true,\n            listingFilters: [],\n            listingSorting: {},\n        };\n    },\n\n    computed: {\n        search() {\n            return Shopware.Store.get('shopwareExtensions').search;\n        },\n\n        activeFilters: {\n            get() {\n                return Shopware.Store.get('shopwareExtensions').search.filter;\n            },\n            set(newFilter) {\n                Shopware.Store.get('shopwareExtensions').search.filter = newFilter;\n            },\n        },\n\n        sortingOptions() {\n            if (!this.listingSorting.options) {\n                return [];\n            }\n\n            return this.listingSorting.options.map(option => {\n                option.orderIdentifier = `${option.orderBy}##${option.orderSequence}`;\n\n                return option;\n            });\n        },\n\n        defaultSortingValue() {\n            if (!this.listingSorting.default) {\n                return null;\n            }\n\n            return `${this.listingSorting.default.orderBy}##${this.listingSorting.default.orderSequence}`;\n        },\n\n        sortingValue() {\n            const field = this.search.sorting && this.search.sorting.field;\n            const order = this.search.sorting && this.search.sorting.order;\n\n            if (!field || !order) {\n                return this.defaultSortingValue;\n            }\n\n            // Sorting value contains field and order which are seperated by two #\n            return `${field}##${order}`;\n        },\n\n        listingFiltersSorted() {\n            // avoid any manipulations to references\n            const listingFiltersCopy = Shopware.Utils.object.cloneDeep(this.listingFilters);\n\n            // sort filters\n            listingFiltersCopy.sort((a, b) => a.position - b.position);\n\n            // sort options in each filter\n            listingFiltersCopy.forEach(filter => {\n                filter.options.sort((a, b) => a.position - b.position);\n            });\n\n            // special case for categories - add children behind parents\n            const categoryFilter = listingFiltersCopy.find(filter => filter.type === 'category');\n\n            if (categoryFilter) {\n                categoryFilter.options = this.getOrderedCategories(categoryFilter.options);\n            }\n\n            return listingFiltersCopy;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchListingFilters();\n        },\n\n        fetchListingFilters() {\n            return this.extensionStoreDataService.listingFilters()\n                .then(({ filter, sorting }) => {\n                    this.listingFilters = filter;\n                    this.listingSorting = sorting;\n                })\n                .catch((e) => {\n                    this.createNotificationError({\n                        message: e,\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        getValueForFilter(filter) {\n            return this.activeFilters[filter.name] || null;\n        },\n\n        changeValueForFilter(filter, value) {\n            if (!value) {\n                this.$delete(this.activeFilters, filter.name);\n                return;\n            }\n\n            this.activeFilters[filter.name] = value;\n        },\n\n        getOptionsForFilter(filter) {\n            const anyOption = {\n                label: this.$t('sw-extension.store.listing.anyOption'),\n                value: null,\n            };\n\n            return [\n                anyOption,\n                ...filter.options,\n            ];\n        },\n\n        setSelectedSorting(orderIdentifier) {\n            // Sorting value contains field and order which are seperated by two #\n            //  Here we extract both values\n            const [field, order] = orderIdentifier.split('##');\n\n            Shopware.Store.get('shopwareExtensions').setSearchValue(\n                { key: 'sorting', value: Criteria.sort(field, order) },\n            );\n        },\n\n        isRootCategory(category) {\n            return category.parent === null || typeof category.parent === 'undefined';\n        },\n\n        categoryDepth(category) {\n            let depth = 0;\n            let currentParent = this.getCategoryByName(category.parent);\n\n            while (currentParent) {\n                depth += 1;\n                currentParent = this.getCategoryByName(currentParent.parent) ?\n                    this.getCategoryByName(currentParent.parent) :\n                    null;\n            }\n\n            return depth;\n        },\n\n        getCategoryByName(name) {\n            const categoryFilter = this.listingFilters.find(filter => filter.type === 'category');\n            return categoryFilter.options.find((category) => {\n                return category.label === name\n                    || category.value === name\n                    || category.name === name;\n            });\n        },\n\n        getOrderedCategories(categories) {\n            const lookup = new Map();\n\n            // add a root\n            lookup.set(null, { value: null, children: [] });\n\n            // add all nodes to lookup\n            categories.forEach((option) => {\n                lookup.set(option.value, { value: option, children: [] });\n            });\n\n            // link children\n            categories.forEach((option) => {\n                lookup.get(option.parent).children.push(lookup.get(option.value));\n            });\n\n            // denormalize lookup\n            return this.flatTree(lookup.get(null));\n        },\n\n        flatTree(root) {\n            const flat = root.value ? [root.value] : [];\n\n            root.children.sort((a, b) => a.value.position - b.value.position)\n                .forEach((child) => flat.push(...this.flatTree(child)));\n\n            return flat;\n        },\n    },\n};\n"],"names":["template","Criteria","index","newFilter","option","field","order","listingFiltersCopy","a","b","filter","categoryFilter","sorting","value","orderIdentifier","category","depth","currentParent","name","categories","lookup","root","flat","child"],"mappings":"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"}