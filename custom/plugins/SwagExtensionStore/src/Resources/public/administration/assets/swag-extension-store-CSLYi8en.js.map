{"version":3,"mappings":";4iCAAA,SAAS,UAAU,SAAS,yBAA0B,UAAM,OAAO,qBAAoC,yBAAC,ECAxG,KAAM,CAAE,SAAAA,CAAQ,EAAK,SAAS,KAEf,MAAMC,UAAkC,SAAS,QAAQ,UAAW,CAC/E,YAAYC,EAAYC,EAAcC,EAAc,kBAAmB,CACnE,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,2BACpB,CAEI,MAAM,eAAeC,EAAS,CAM1B,OALY,MAAM,KAAK,WAAW,IAAI,WAAW,KAAK,WAAW,iBAAkB,CAC/E,QAAS,KAAK,aAAaA,CAAO,EAClC,QAAS,CACrB,CAAS,GAEU,IACnB,CAEI,MAAM,iBAAiBC,EAAQD,EAAS,CACpC,MAAME,EAAW,KAAK,uBAAuBD,CAAM,EAE7C,CAAE,KAAAE,CAAI,EAAK,MAAM,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,QAASD,EAAS,MAAK,EAAI,CAC9F,QAAS,KAAK,aAAaF,CAAO,EAClC,QAAS,CACrB,CAAS,EAEKI,EAAa,GACnB,OAAAA,EAAW,MAAQD,EAAK,KAAK,MAC7BC,EAAW,KAAK,GAAGD,EAAK,IAAI,EAErBC,CACf,CAKI,MAAM,mBAAmBC,EAAML,EAAS,CACpC,OAAO,KAAK,iBAAiB,CAAE,KAAMK,CAAI,EAAIL,CAAO,EAAE,KACjDI,GAAeA,EAAW,KAAME,GAAcA,EAAU,OAASD,CAAI,GAAK,IACvF,CACA,CAEI,MAAM,UAAUE,EAAIP,EAAS,CACzB,KAAM,CAAE,KAAAG,CAAI,EAAK,MAAM,KAAK,WAAW,IAAI,WAAW,KAAK,WAAW,WAAWI,CAAE,GAAI,CACnF,QAAS,KAAK,aAAaP,CAAO,EAClC,QAAS,CACrB,CAAS,EAED,OAAOG,CACf,CAEI,MAAM,WAAWK,EAAMC,EAAOF,EAAI,CAC9B,MAAML,EAAW,IAAIP,EACjBa,EACAC,CACZ,EAEc,CAAE,KAAAN,CAAI,EAAK,MAAM,KAAK,WAAW,IAAI,WAAW,KAAK,WAAW,IAAII,CAAE,WAAY,CACpF,QAAS,KAAK,aAAY,EAC1B,OAAQL,EAAS,MAAK,EACtB,QAAS,CACrB,CAAS,EAED,OAAOC,CACf,CAEI,aAAaH,EAAU,KAAM,CACzB,MAAMU,EAAU,CACZ,eAAgB,mBAChB,OAAQ,mBACR,cAAe,UAAU,KAAK,aAAa,SAAQ,CAAE,EACjE,EAEQ,OAAIV,GAAWA,EAAQ,aACnBU,EAAQ,gBAAgB,EAAIV,EAAQ,YAGjCU,CACf,CAEI,uBAAuB,CACnB,KAAAF,EAAO,EACP,MAAAC,EAAQ,GACR,OAAAE,EAAS,KACT,SAAAC,EAAW,KACX,KAAAC,EAAO,KACP,QAAAC,EAAU,KACV,OAAAC,EAAS,EACjB,EAAQ,GAAI,CACJ,MAAMb,EAAW,IAAIP,EACjBa,EACAC,CACZ,EAEYI,GACAX,EAAS,QAAQW,CAAI,EAGzB,MAAMG,EAAU,GAEhB,OAAIL,IAAW,MACXK,EAAQ,KAAKrB,EAAS,OAAO,SAAUgB,CAAM,CAAC,EAGlD,OAAO,QAAQI,CAAM,EAAE,QAAQ,CAAC,CAACE,EAAOC,CAAK,IAAM,CAC/CF,EAAQ,KAAKrB,EAAS,OAAOsB,EAAOC,CAAK,CAAC,CACtD,CAAS,EAEGN,IAAa,MACbI,EAAQ,KAAKrB,EAAS,OAAO,WAAYiB,CAAQ,CAAC,EAGlDI,EAAQ,OAAS,GACjBd,EAAS,UAAUP,EAAS,MAAM,MAAOqB,CAAO,CAAC,EAGjDF,IACAZ,EAAS,aAAY,EACrBA,EAAS,WAAWY,CAAO,GAGxBZ,CACf,CACA,CC1He,MAAMiB,UAAgC,SAAS,QAAQ,UAAW,CAC7E,YAAYtB,EAAYC,EAAcC,EAAc,kBAAmB,CACnE,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,+BACpB,CAEI,QAAQqB,EAAaC,EAAW,CAC5B,OAAO,KAAK,WAAW,KACnB,YAAY,KAAK,WAAW,YAC5B,CAAE,YAAAD,EAAa,UAAAC,CAAS,EACxB,CAAE,QAAS,KAAK,aAAY,EAAI,QAAS,CAAC,CACtD,CACA,CAEI,UAAUC,EAAS,CACf,OAAO,KAAK,WAAW,KACnB,YAAY,KAAK,WAAW,cAC5BA,EACA,CAAE,QAAS,KAAK,aAAY,EAAI,QAAS,CAAC,CACtD,CACA,CAEI,iBAAkB,CACd,OAAO,KAAK,WAAW,IACnB,YAAY,KAAK,WAAW,sBAC5B,CAAE,QAAS,KAAK,aAAY,EAAI,QAAS,CAAC,CACtD,CACA,CAEI,aAAatB,EAAU,KAAM,CACzB,MAAMU,EAAU,CACZ,eAAgB,mBAChB,OAAQ,mBACR,cAAe,UAAU,KAAK,aAAa,SAAQ,CAAE,EACjE,EAEQ,OAAIV,GAAWA,EAAQ,aACnBU,EAAQ,gBAAgB,EAAIV,EAAQ,YAGjCU,CACf,CACA,CCtCA,SAAS,UAAU,SAAS,2BAA4B,UAAM,OAAO,qBAAiC,yBAAC,EACvG,SAAS,UAAU,SAAS,6BAA8B,UAAM,OAAO,qBAAmC,yBAAC,EAC3G,SAAS,UAAU,SAAS,4BAA6B,UAAM,OAAO,qBAAkC,yBAAC,EACzG,SAAS,UAAU,SAAS,4BAA6B,UAAM,OAAO,qBAAuC,yBAAC,EAC9G,SAAS,UAAU,SAAS,oCAAqC,UAAM,OAAO,qBAA+C,2BAAC,EAC9H,SAAS,UAAU,SAAS,yBAA0B,UAAM,OAAO,qBAAoC,2BAAC,EACxG,SAAS,UAAU,SAAS,4BAA6B,UAAM,OAAO,qBAAuC,2BAAC,EAC9G,SAAS,UAAU,SAAS,oCAAqC,UAAM,OAAO,qBAA+C,2BAAC,EAC9H,SAAS,UAAU,SAAS,qBAAsB,IAAKa,EAAA,IAAC,OAAO,qBAAsC,2BAAC,EACtG,SAAS,UAAU,SAAS,0BAA2B,IAAKA,EAAA,IAAC,OAAO,qBAA2C,KAAC,EAChH,SAAS,UAAU,SAAS,mCAAoC,UAAM,OAAO,qBAA8C,2BAAC,EAC5H,SAAS,UAAU,SAAS,gCAAiC,UAAM,OAAO,qBAA2C,2BAAC,EACtH,SAAS,UAAU,SAAS,mCAAoC,UAAM,OAAO,qBAA8C,2BAAC,EAC5H,SAAS,UAAU,SAAS,0CAA2C,UAAM,OAAO,qBAAqD,2BAAC,EAC1I,SAAS,UAAU,SAAS,oDAAqD,IAAKA,EAAA,IAAC,OAAO,qBAA+D,2BAAC,EAG9J,SAAS,YAAY,mBAAmB,4BAA6B,IAC1D,IAAI3B,EACP,SAAS,YAAY,aAAa,MAAM,EAAE,WAC1C,SAAS,QAAQ,cAAc,CACvC,CACC,EAED,SAAS,YAAY,mBAAmB,gCAAiC,IAC9D,IAAIuB,EACP,SAAS,YAAY,aAAa,MAAM,EAAE,WAC1C,SAAS,QAAQ,cAAc,CACvC,CACC,EAED,SAAS,OAAO,SAAS,qBAAsB,CAC3C,MAAO,mCACP,KAAM,mCACN,gBAAiB,eACjB,gBAAiB,eACjB,OAAQ,CACJ,MAAO,CACH,KAAM,QACN,SAAU,CACN,KAAM,4BACtB,EACY,KAAM,CACF,UAAW,wBAC3B,EACY,UAAW,2BACX,SAAU,CACN,QAAS,CACL,KAAM,UACN,UAAW,6BACX,SAAU,CACN,KAAM,gCAC9B,EACoB,KAAM,CACF,UAAW,wBACnC,EACoB,SAAU,CACN,IAAK,CACD,KAAM,MACN,UAAW,6BACX,UAAW,CACP,QAAS,EACzC,EAC4B,KAAM,CACF,UAAW,wBAC3C,CACA,EACwB,MAAO,CACH,KAAM,QACN,UAAW,6BACX,UAAW,CACP,QAAS,EACzC,EAC4B,KAAM,CACF,UAAW,wBAC3C,CACA,CACA,CACA,CACA,CACA,EACQ,eAAgB,CACZ,UAAW,4BACX,KAAM,mBACN,KAAM,CACF,WAAY,qBACZ,UAAW,wBAC3B,EACY,MAAO,CACH,QAAUK,IACC,CAAE,GAAIA,EAAM,OAAO,EAAE,EAEhD,CACA,CACA,EAKI,gBAAgBC,EAAMC,EAAc,CAC5BA,EAAa,OAAS,oCACtBA,EAAa,SAAW,CACpB,KAAM,4BACtB,GAGQD,EAAKC,CAAY,CACzB,CACA,CAAC,EChHD,SAAS,UAAU,SAAS,qBAAsB,IAAKH,EAAA,IAAC,OAAO,qBAA2B,2BAAC,EAC3F,SAAS,UAAU,SAAS,yCAA0C,UAAM,OAAO,qBAAoD,2BAAC,ECGxI,KAAM,CAAE,WAAAI,CAAA,EAAe,SAAS,QAEhC,MAAqBC,UAA8BD,CAAW,CAC1D,YAAY9B,EAA2BC,EAA4BC,EAAc,mBAAoB,CACjG,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,wBAGhB,MAAM,aAAa8B,EAAuB,CACtC,OAAO,KAAK,WAAW,IACnB,WAAW,KAAK,WAAW,IAAIA,CAAa,WAC5C,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKF,EAAW,eAAe,KAAK,IAAI,CAAC,EAG/C,MAAM,WAAWtB,EAAcyB,EAAiBC,EAAiB,CAC7D,OAAO,KAAK,WAAW,KACnB,WAAW,KAAK,WAAW,YAC3B,CAAE,KAAA1B,EAAM,QAAAyB,EAAS,QAAAC,CAAA,EACjB,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKJ,EAAW,eAAe,KAAK,IAAI,CAAC,EAG/C,MAAM,UAAUK,EAAiBC,EAA2C5B,EAAc,CACtF,OAAO,KAAK,WAAW,KACnB,WAAW,KAAK,WAAW,cAC3B,CAAE,QAAA2B,EAAS,UAAAC,EAAW,KAAA5B,CAAA,EACtB,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKsB,EAAW,eAAe,KAAK,IAAI,CAAC,EAG/C,MAAM,sBAAsBtB,EAAc,CACtC,OAAO,KAAK,WAAW,IACnB,WAAW,KAAK,WAAW,IAAIA,CAAI,QACnC,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKsB,EAAW,eAAe,KAAK,IAAI,CAAC,EAG/C,MAAM,eAAetB,EAAcyB,EAAgB,CAC/C,OAAO,KAAK,WAAW,IACnB,WAAW,KAAK,WAAW,IAAIzB,CAAI,IAAIyB,CAAO,GAC9C,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKH,EAAW,eAAe,KAAK,IAAI,CAAC,EAG/C,MAAM,uBAAwB,CAC1B,OAAO,KAAK,WAAW,IACnB,WAAW,KAAK,WAAW,WAC3B,CAAE,QAAS,KAAK,iBAAgB,CAAE,EACpC,KAAKA,EAAW,eAAe,KAAK,IAAI,CAAC,EAEnD,CCrDA,SAAS,UAAU,SACf,8BACA,IAAAJ,EAAA,IAAM,OAAO,qBAAyC,2BAC1D,EACA,SAAS,UAAU,SACf,qCACA,IAAAA,EAAA,IAAM,OAAO,qBAAgD,KACjE,EACA,SAAS,UAAU,SACf,uCACA,IAAAA,EAAA,IAAM,OAAO,qBAAkD,2BACnE,EACA,SAAS,UAAU,SACf,oCACA,IAAAA,EAAA,IAAM,OAAO,qBAA+C,2BAChE,EACA,SAAS,UAAU,SACf,+BACA,IAAAA,EAAA,IAAM,OAAO,qBAA0C,2BAC3D,EAEA,SAAS,YAAY,mBAAmB,wBAAyB,IACtD,IAAIW,EACP,SAAS,YAAY,aAAa,MAAM,EAAE,WAC1C,SAAS,QAAQ,cAAc,EAEtC","names":["Criteria","ExtensionStoreDataService","httpClient","loginService","apiEndpoint","context","search","criteria","data","extensions","name","extension","id","page","limit","headers","rating","category","term","sorting","filter","filters","field","value","ExtensionLicenseService","extensionId","variantId","payload","__vitePreload","route","next","currentRoute","ApiService","InAppPurchasesService","technicalName","feature","variant","taxRate","positions","InAppPurchases"],"ignoreList":[],"sources":["../../../app/administration/src/module/sw-extension/index.ts","../../../app/administration/src/module/sw-extension-store/service/extension-store-data.service.js","../../../app/administration/src/module/sw-extension-store/service/extension-store-licenses.service.js","../../../app/administration/src/module/sw-extension-store/index.js","../../../app/administration/src/module/sw-dashboard/index.js","../../../app/administration/src/module/sw-in-app-purchases/service/in-app-purchases.service.ts","../../../app/administration/src/module/sw-in-app-purchases/index.ts"],"sourcesContent":["Shopware.Component.override('sw-extension-card-base', () => import('./component/sw-extension-card-base'));\n","const { Criteria } = Shopware.Data;\n\nexport default class ExtensionStoreDataService extends Shopware.Classes.ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'extension-store') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'extensionStoreDataService';\n    }\n\n    async listingFilters(context) {\n        const res = await this.httpClient.get(`_action/${this.apiEndpoint}/store-filters`, {\n            headers: this.basicHeaders(context),\n            version: 3,\n        });\n\n        return res.data;\n    }\n\n    async getExtensionList(search, context) {\n        const criteria = this._getCriteriaFromSearch(search);\n\n        const { data } = await this.httpClient.post(`_action/${this.apiEndpoint}/list`, criteria.parse(), {\n            headers: this.basicHeaders(context),\n            version: 3,\n        });\n\n        const extensions = [];\n        extensions.total = data.meta.total;\n        extensions.push(...data.data);\n\n        return extensions;\n    }\n\n    /**\n     * @returns {Promise<Extension|null>}\n     */\n    async getExtensionByName(name, context) {\n        return this.getExtensionList({ term: name }, context).then(\n            (extensions) => extensions.find((extension) => extension.name === name) ?? null,\n        );\n    }\n\n    async getDetail(id, context) {\n        const { data } = await this.httpClient.get(`_action/${this.apiEndpoint}/detail/${id}`, {\n            headers: this.basicHeaders(context),\n            version: 3,\n        });\n\n        return data;\n    }\n\n    async getReviews(page, limit, id) {\n        const criteria = new Criteria(\n            page,\n            limit,\n        );\n\n        const { data } = await this.httpClient.get(`_action/${this.apiEndpoint}/${id}/reviews`, {\n            headers: this.basicHeaders(),\n            params: criteria.parse(),\n            version: 3,\n        });\n\n        return data;\n    }\n\n    basicHeaders(context = null) {\n        const headers = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n        };\n\n        if (context && context.languageId) {\n            headers['sw-language-id'] = context.languageId;\n        }\n\n        return headers;\n    }\n\n    _getCriteriaFromSearch({\n        page = 1,\n        limit = 25,\n        rating = null,\n        category = null,\n        term = null,\n        sorting = null,\n        filter = {},\n    } = {}) {\n        const criteria = new Criteria(\n            page,\n            limit,\n        );\n\n        if (term) {\n            criteria.setTerm(term);\n        }\n\n        const filters = [];\n\n        if (rating !== null) {\n            filters.push(Criteria.equals('rating', rating));\n        }\n\n        Object.entries(filter).forEach(([field, value]) => {\n            filters.push(Criteria.equals(field, value));\n        });\n\n        if (category !== null) {\n            filters.push(Criteria.equals('category', category));\n        }\n\n        if (filters.length > 0) {\n            criteria.addFilter(Criteria.multi('AND', filters));\n        }\n\n        if (sorting) {\n            criteria.resetSorting();\n            criteria.addSorting(sorting);\n        }\n\n        return criteria;\n    }\n}\n","export default class ExtensionLicenseService extends Shopware.Classes.ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'extension-store') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'extensionStoreLicensesService';\n    }\n\n    newCart(extensionId, variantId) {\n        return this.httpClient.post(\n            `/_action/${this.apiEndpoint}/cart/new`,\n            { extensionId, variantId },\n            { headers: this.basicHeaders(), version: 3 },\n        );\n    }\n\n    orderCart(payload) {\n        return this.httpClient.post(\n            `/_action/${this.apiEndpoint}/cart/order`,\n            payload,\n            { headers: this.basicHeaders(), version: 3 },\n        );\n    }\n\n    getPaymentMeans() {\n        return this.httpClient.get(\n            `/_action/${this.apiEndpoint}/cart/payment-means`,\n            { headers: this.basicHeaders(), version: 3 },\n        );\n    }\n\n    basicHeaders(context = null) {\n        const headers = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n        };\n\n        if (context && context.languageId) {\n            headers['sw-language-id'] = context.languageId;\n        }\n\n        return headers;\n    }\n}\n","import ExtensionStoreDataService from './service/extension-store-data.service';\nimport ExtensionLicenseService from './service/extension-store-licenses.service';\n\n\nShopware.Component.register('sw-extension-store-index', () => import('./page/sw-extension-store-index'));\nShopware.Component.register('sw-extension-store-listing', () => import('./page/sw-extension-store-listing'));\nShopware.Component.register('sw-extension-store-detail', () => import('./page/sw-extension-store-detail'));\nShopware.Component.register('sw-extension-store-slider', () => import('./component/sw-extension-store-slider'));\nShopware.Component.register('sw-extension-store-listing-filter', () => import('./component/sw-extension-store-listing-filter'));\nShopware.Component.register('sw-extension-buy-modal', () => import('./component/sw-extension-buy-modal'));\nShopware.Component.register('sw-extension-listing-card', () => import('./component/sw-extension-listing-card'));\nShopware.Component.register('sw-extension-store-update-warning', () => import('./component/sw-extension-store-update-warning'));\nShopware.Component.register('sw-extension-label', () => import('./component/sw-extension-store-label'));\nShopware.Component.register('sw-extension-type-label', () => import('./component/sw-extension-store-type-label'));\nShopware.Component.register('sw-extension-store-label-display', () => import('./component/sw-extension-store-label-display'));\nShopware.Component.register('sw-extension-store-error-card', () => import('./component/sw-extension-store-error-card'));\nShopware.Component.register('sw-extension-store-accessibility', () => import('./component/sw-extension-store-accessibility'));\nShopware.Component.register('sw-extension-store-statistics-promotion', () => import('./component/sw-extension-store-statistics-promotion'));\nShopware.Component.register('sw-extension-store-in-app-purchases-listing-modal', () => import('./component/sw-extension-store-in-app-purchases-listing-modal'));\n\n\nShopware.Application.addServiceProvider('extensionStoreDataService', () => {\n    return new ExtensionStoreDataService(\n        Shopware.Application.getContainer('init').httpClient,\n        Shopware.Service('loginService'),\n    );\n});\n\nShopware.Application.addServiceProvider('extensionStoreLicensesService', () => {\n    return new ExtensionLicenseService(\n        Shopware.Application.getContainer('init').httpClient,\n        Shopware.Service('loginService'),\n    );\n});\n\nShopware.Module.register('sw-extension-store', {\n    title: 'sw-extension-store.general.title',\n    name: 'sw-extension-store.general.title',\n    routePrefixName: 'sw.extension',\n    routePrefixPath: 'sw/extension',\n    routes: {\n        store: {\n            path: 'store',\n            redirect: {\n                name: 'sw.extension.store.listing',\n            },\n            meta: {\n                privilege: 'system.extension_store',\n            },\n            component: 'sw-extension-store-index',\n            children: {\n                listing: {\n                    path: 'listing',\n                    component: 'sw-extension-store-listing',\n                    redirect: {\n                        name: 'sw.extension.store.listing.app',\n                    },\n                    meta: {\n                        privilege: 'system.extension_store',\n                    },\n                    children: {\n                        app: {\n                            path: 'app',\n                            component: 'sw-extension-store-listing',\n                            propsData: {\n                                isTheme: false,\n                            },\n                            meta: {\n                                privilege: 'system.extension_store',\n                            },\n                        },\n                        theme: {\n                            path: 'theme',\n                            component: 'sw-extension-store-listing',\n                            propsData: {\n                                isTheme: true,\n                            },\n                            meta: {\n                                privilege: 'system.extension_store',\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        'store.detail': {\n            component: 'sw-extension-store-detail',\n            path: 'store/detail/:id',\n            meta: {\n                parentPath: 'sw.extension.store',\n                privilege: 'system.extension_store',\n            },\n            props: {\n                default: (route) => {\n                    return { id: route.params.id };\n                },\n            },\n        },\n    },\n\n    /**\n     * Add routeMiddleware to add a redirect to the landing page\n     */\n    routeMiddleware(next, currentRoute) {\n        if (currentRoute.name === 'sw.extension.store.landing-page') {\n            currentRoute.redirect = {\n                name: 'sw.extension.store.listing',\n            };\n        }\n\n        next(currentRoute);\n    },\n});\n","Shopware.Component.override('sw-dashboard-index', () => import('./page/sw-dashboard-index'));\nShopware.Component.register('sw-dashboard-statistics-promotion-card', () => import('./component/sw-dashboard-statistics-promotion-card'));\n","import type * as IAP from 'SwagExtensionStore/module/sw-in-app-purchases/types';\nimport type { LoginService } from 'src/core/service/login.service';\nimport type { AxiosInstance } from 'axios';\n\nconst { ApiService } = Shopware.Classes;\n\nexport default class InAppPurchasesService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService, apiEndpoint = 'in-app-purchases') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'inAppPurchasesService';\n    }\n\n    async getExtension(technicalName: string) {\n        return this.httpClient.get<IAP.Extension>(\n            `_action/${this.apiEndpoint}/${technicalName}/details`,\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n\n    async createCart(name: string, feature: string, variant: string) {\n        return this.httpClient.post<IAP.InAppPurchaseCart>(\n            `_action/${this.apiEndpoint}/cart/new`,\n            { name, feature, variant },\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n\n    async orderCart(taxRate: number, positions: IAP.InAppPurchaseCartPositions, name: string) {\n        return this.httpClient.post<IAP.InAppPurchase>(\n            `_action/${this.apiEndpoint}/cart/order`,\n            { taxRate, positions, name },\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n\n    async getAvailablePurchases(name: string) {\n        return this.httpClient.get<IAP.InAppPurchaseCollection>(\n            `_action/${this.apiEndpoint}/${name}/list`,\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n\n    async getPriceModels(name: string, feature:string) {\n        return this.httpClient.get<IAP.InAppPurchase>(\n            `_action/${this.apiEndpoint}/${name}/${feature}`,\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n\n    async refreshInAppPurchases() {\n        return this.httpClient.get<never>(\n            `_action/${this.apiEndpoint}/refresh`,\n            { headers: this.getBasicHeaders() },\n        ).then(ApiService.handleResponse.bind(this));\n    }\n}\n","import InAppPurchases from './service/in-app-purchases.service';\n\nShopware.Component.override(\n    'sw-in-app-purchase-checkout',\n    () => import('./component/sw-in-app-purchase-checkout'),\n);\nShopware.Component.register(\n    'sw-in-app-purchase-checkout-button',\n    () => import('./component/sw-in-app-purchase-checkout-button'),\n);\nShopware.Component.register(\n    'sw-in-app-purchase-checkout-overview',\n    () => import('./component/sw-in-app-purchase-checkout-overview'),\n);\nShopware.Component.register(\n    'sw-in-app-purchase-checkout-state',\n    () => import('./component/sw-in-app-purchase-checkout-state'),\n);\nShopware.Component.register(\n    'sw-in-app-purchase-price-box',\n    () => import('./component/sw-in-app-purchase-price-box'),\n);\n\nShopware.Application.addServiceProvider('inAppPurchasesService', () => {\n    return new InAppPurchases(\n        Shopware.Application.getContainer('init').httpClient,\n        Shopware.Service('loginService'),\n    );\n});\n"],"file":"assets/swag-extension-store-CSLYi8en.js"}