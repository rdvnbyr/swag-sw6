const s=Shopware.Classes.ApiService,n=Object.freeze({IDLE:"idle",FETCHING:"fetching",WRITING:"writing",MEDIA_PROCESSING:"media-processing",CLEANUP:"cleanup",INDEXING:"indexing",WAITING_FOR_APPROVE:"waiting-for-approve",ABORTING:"aborting"});class E extends s{constructor(t,e,a="migration"){super(t,e,a),this.basicConfig={timeout:3e4,version:Shopware.Context.api.apiVersion}}updateConnectionCredentials(t,e,a={}){const o=this.getBasicHeaders(a);return this.httpClient.post(`_action/${this.getApiBasePath()}/update-connection-credentials`,{connectionId:t,credentialFields:e},{...this.basicConfig,headers:o}).then(l=>s.handleResponse(l))}checkConnection(t,e={}){const a=this.getBasicHeaders(e);return this.httpClient.post(`_action/${this.getApiBasePath()}/check-connection`,{connectionId:t},{...this.basicConfig,headers:a}).then(o=>s.handleResponse(o))}getDataSelection(t,e={}){const a=this.getBasicHeaders(e);return this.httpClient.get(`_action/${this.getApiBasePath()}/data-selection`,{...this.basicConfig,params:{connectionId:t},headers:a}).then(o=>s.handleResponse(o))}generatePremapping(t){const e=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/generate-premapping`,{dataSelectionIds:t},{...this.basicConfig,headers:e}).then(a=>s.handleResponse(a))}writePremapping(t){const e=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/write-premapping`,{premapping:t},{...this.basicConfig,headers:e}).then(a=>s.handleResponse(a))}startMigration(t){const e=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/start-migration`,{dataSelectionNames:t},{...this.basicConfig,headers:e}).then(a=>s.handleResponse(a))}getState(){const t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/get-state`,{...this.basicConfig,headers:t}).then(e=>s.handleResponse(e))}approveFinishedMigration(){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/approve-finished`,{},{...this.basicConfig,headers:t}).then(e=>s.handleResponse(e))}abortMigration(){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/abort-migration`,{},{...this.basicConfig,headers:t}).then(e=>s.handleResponse(e))}getProfiles(){const t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profiles`,{...this.basicConfig,headers:t}).then(e=>s.handleResponse(e))}getGateways(t){const e=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/get-gateways`,{...this.basicConfig,params:{profileName:t},headers:e}).then(a=>s.handleResponse(a))}getProfileInformation(t,e){const a=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profile-information`,{...this.basicConfig,params:{profileName:t,gatewayName:e},headers:a}).then(o=>s.handleResponse(o))}getGroupedLogsOfRun(t){const e=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/get-grouped-logs-of-run`,{...this.basicConfig,params:{runUuid:t},headers:e}).then(a=>s.handleResponse(a))}clearDataOfRun(t){const e=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/clear-data-of-run`,{runUuid:t},{...this.basicConfig,headers:e}).then(a=>s.handleResponse(a))}resetChecksums(t,e={}){const a=this.getBasicHeaders(e);return this.httpClient.post(`_action/${this.getApiBasePath()}/reset-checksums`,{connectionId:t},{...this.basicConfig,headers:a}).then(o=>s.handleResponse(o))}cleanupMigrationData(t={}){const e=this.getBasicHeaders(t);return this.httpClient.post(`_action/${this.getApiBasePath()}/cleanup-migration-data`,{...this.basicConfig,headers:e})}isMediaProcessing(t={}){const e=this.getBasicHeaders(t);return this.httpClient.get(`_action/${this.getApiBasePath()}/is-media-processing`,{...this.basicConfig,headers:e})}}const{Application:h}=Shopware;h.addServiceProvider("migrationApiService",i=>{const t=h.getContainer("init");return new E(t.httpClient,i.loginService)});const{Mixin:N}=Shopware,{debug:T}=Shopware.Utils;N.register("swag-wizard",{inject:["feature"],data(){return{routes:{},currentRoute:{name:"",index:0}}},computed:{routeIndex(){return Math.floor(this.currentRoute.index)},routeCount(){const i=[];return Object.keys(this.routes).forEach(t=>{i.includes(Math.floor(this.routes[t].index))||i.push(Math.floor(this.routes[t].index))}),i.length},routePrevious(){let i;return Object.keys(this.routes).forEach(t=>{this.routes[t].index<this.currentRoute.index&&(i===void 0||Math.floor(this.routes[t].index)>i.index)&&(i=this.routes[t])}),i!==void 0?i:!1},routeNext(){let i;return Object.keys(this.routes).forEach(t=>{Math.floor(this.routes[t].index)>this.routeIndex&&(i===void 0||Math.floor(this.routes[t].index)<i.index)&&(i=this.routes[t])}),i!==void 0?i:!1},navigateToPreviousPossible(){return this.routePrevious!==!1},navigateToNextPossible(){return this.routeNext!==!1}},created(){this.matchCurrentRoute(!1)},updated(){this.matchCurrentRoute(!0)},methods:{matchCurrentRoute(i=!0){const t=this.$router.currentRoute.value;let e;Object.keys(this.routes).some(o=>this.routes[o].name===t.name?(e=this.routes[o],!0):!1)&&(this.currentRoute=e,i&&this.onChildRouteChanged())},onChildRouteChanged(){T.warn("swag-wizard Mixin",'When using the wizard mixin you have to implement your custom "onChildRouteChanged()" method.')},navigateToRoute(i){this.$router.push({name:i.name}).catch(t=>{console.error(t.message)})},navigateToPrevious(){return this.navigateToPreviousPossible?(this.navigateToRoute(this.routePrevious),!0):!1},navigateToNext(){return this.navigateToNextPossible?(this.navigateToRoute(this.routeNext),!0):!1}}});const A=`{% block swag_migration_dashboard_card %} <mt-card class="swag-migration-dashboard-card" position-identifier="swag-migration-dashboard-card"> {% block swag_migration_dashboard_card_wrapper %} {% block swag_migration_dashboard_card_title %} <template #title> <span class="swag-migration-dashboard-card__title"> {{ $tc('swag-migration.dashboard.title') }} </span> </template> {% endblock %} {% block swag_migration_dashboard_card_container %} <sw-container class="swag-migration-shop-information" rows="auto auto"> {% block fuuuu %} {% endblock %} {% block swag_migration_dashboard_card_content %} <div class="swag-migration-dashboard-card__content"> {% block swag_migration_dashboard_card_wrapper %} <div class="swag-migration-dashboard-card__wrapper"> {% block swag_migration_dashboard_card_left_content %} <div class="swag-migration-dashboard-card__left-content"> {% block swag_migration_dashboard_card_headline %} <div class="swag-migration-dashboard-card__headline"> {{ $tc('swag-migration.dashboard.headline') }} </div> {% endblock %} {% block swag_migration_dashboard_card_information %} <div class="swag-migration-dashboard-card__information"> {{ $tc('swag-migration.dashboard.information') }} </div> {% endblock %} {% block swag_migration_dashboard_card_button %} <mt-button variant="primary" @click="goToMigrationIndexPage" > {{ $tc('swag-migration.dashboard.button') }} </mt-button> {% endblock %} </div> {% endblock %} {% block swag_migration_dashboard_card_right_content %} <div class="swag-migration-dashboard-card__right-content"> <img :src="assetFilter('/swagmigrationassistant/administration/static/img/wizard-introduction.svg')" alt=""> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </sw-container> {% endblock %} {% endblock %} </mt-card> {% endblock %}`,{Component:O}=Shopware;O.register("swag-migration-dashboard-card",{template:A,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},methods:{goToMigrationIndexPage(){this.$router.push({name:"swag.migration.index"})}}});const F=`{% block swag_migration_shop_information %} <mt-card class="swag-migration-shop-information" :title="$tc('swag-migration.index.shopInfoCard.cardTitle')" position-identifier="swag-migration-shop-information" > <template #header-right> <mt-button v-tooltip="{ message: $tc('swag-migration.index.shopInfoCard.refreshTooltip') }" class="swag-migration-shop-information__refresh-connection" size="x-small" square variant="secondary" @click="onClickRefreshConnection" > <mt-icon name="regular-redo-s" size="16px" /> </mt-button> </template> {% block swag_migration_shop_information_content %} <template #grid> <sw-container rows="auto auto"> <sw-card-section :divider="showMoreInformation ? 'bottom' : ''"> {% block swag_migration_shop_information_connection %} <div class="swag-migration-shop-information__connection"> {% block swag_migration_shop_information_connection_avatar %} <template v-if="profileIcon !== null && profileIcon !== ''"> <img class="swag-migration-shop-information__profile-avatar" :src="assetFilter(profileIcon)" alt="" size="80px"> </template> <template v-else> <img class="swag-migration-shop-information__profile-avatar" :src="assetFilter('/swagmigrationassistant/administration/static/img/migration-assistant-plugin.svg')" alt="" size="80px"> </template> {% endblock %} {% block swag_migration_shop_information_connection_info %} <div class="swag-migration-shop-information__connection-info"> {% block swag_migration_shop_information_shop_system %} <div class="swag-migration-shop-information__connection-name"> {{ connectionName }} </div> {% endblock %} {% block swag_migration_shop_information_shop_domain %} <div v-if="shopUrl !== ''" class="swag-migration-shop-information__shop-domain"> <span class="swag-migration-shop-information__shop-domain-prefix" :class="shopUrlPrefixClass"> <mt-icon v-if="sslActive" class="swag-migration-shop-information__shop-domain-prefix-icon" name="regular-lock" size="12px" /> <mt-icon v-else class="swag-migration-shop-information__shop-domain-prefix-icon" name="regular-lock-open-s" size="12px" /> {{ shopUrlPrefix }}</span>{{ shopUrl }} </div> {% endblock %} {% block swag_migration_shop_information_actions %} <div class="swag-migration-shop-information__actions"> {% block swag_migration_shop_information_actions_editSettings %} <template v-if="!connection"> <mt-button size="small" variant="secondary" @click="onClickCreateInitialConnection"> {{ $tc('swag-migration.index.shopInfoCard.buttonCreateInitialConnection') }} </mt-button> </template> <template v-else> <mt-button size="small" variant="secondary" @click="onClickEditConnectionCredentials"> {{ $tc('swag-migration.index.shopInfoCard.buttonEditSettings') }} </mt-button> </template> {% endblock %} {% block swag_migration_shop_information_actions_contextMenu %} <sw-context-button v-if="connection"> <template #button> <mt-button size="small" variant="secondary" square > <mt-icon name="solid-ellipsis-h-s" /> </mt-button> </template> {% block swag_migration_shop_information_actions_createConnectionItem %} <sw-context-menu-item @click="onClickCreateConnection"> {{ $tc('swag-migration.index.shopInfoCard.buttonCreateConnection') }} </sw-context-menu-item> {% endblock %} {% block swag_migration_shop_information_actions_selectConnectionItem %} <sw-context-menu-item @click="onClickSelectConnection"> {{ $tc('swag-migration.index.shopInfoCard.buttonSelectConnection') }} </sw-context-menu-item> {% endblock %} {% block swag_migration_shop_information_actions_profileInstallationItem %} <sw-context-menu-item @click="onClickProfileInstallation"> {{ $tc('swag-migration.index.shopInfoCard.buttonProfileInstallation') }} </sw-context-menu-item> {% endblock %} {% block swag_migration_shop_information_actions_removeCredentialsItem %} <sw-context-menu-item variant="danger" @click="showRemoveCredentialsConfirmModal = true"> {{ $tc('swag-migration.index.shopInfoCard.buttonRemoveCredentials') }} </sw-context-menu-item> {% endblock %} {% block swag_migration_shop_information_actions_resetChecksumsItem %} <sw-context-menu-item variant="danger" @click="showResetChecksumsConfirmModal = true"> {{ $tc('swag-migration.index.shopInfoCard.buttonResetChecksums') }} </sw-context-menu-item> {% endblock %} {% block swag_migration_shop_information_actions_divider %} <sw-context-menu-divider /> {% endblock %} {% block swag_migration_shop_information_actions_resetMigrationItem %} <sw-context-menu-item @click="openResetMigrationModal"> {{ $tc('swag-migration.index.shopInfoCard.buttonResetMigration') }} </sw-context-menu-item> {% endblock %} </sw-context-button> {% endblock %} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_shop_information_connection %} <div class="swag-migration-shop-information__connection"> <div class="swag-migration-shop-information__connection-badge"> <sw-label class="swag-migration-shop-information__connection-status" :variant="connectionBadgeVariant" appearance="pill"> <sw-color-badge class="swag-migration-shop-information__connection-status-dot" :variant="connectionBadgeVariant" rounded /> <span class="swag-migration-shop-information__connection-status-text"> {{ $tc(connectionBadgeLabel) }} </span> </sw-label> </div> </div> {% endblock %} </div> {% endblock %} </sw-card-section> <sw-card-section v-if="showMoreInformation" secondary slim> <sw-container class="swag-migration-shop-information__metadata" columns="repeat(auto-fit, minmax(250px, 1fr)" gap="0px 15px"> {% block swag_migration_shop_information_metadata_columns %} <div class="swag-migration-shop-information__metadata-columns"> {% block swag_migration_shop_information_metadata_column_left %} {% block swag_migration_shop_information_metadata_profile %} <sw-description-list> <dt>{{ $tc('swag-migration.index.shopInfoCard.profile') }}</dt> <dd>{{ profile }}</dd> </sw-description-list> {% endblock %} {% block swag_migration_shop_information_metadata_gateway %} <sw-description-list> <dt>{{ $tc('swag-migration.index.shopInfoCard.gateway') }}</dt> <dd>{{ $tc(gateway) }}</dd> </sw-description-list> {% endblock %} {% endblock %} </div> <div class="swag-migration-shop-information__metadata-columns"> {% block swag_migration_shop_information_column_right %} {% block swag_migration_shop_information_metadata_lastConnectionCheck %} <sw-description-list> <dt> {{ $tc('swag-migration.index.shopInfoCard.connectionCheck') }} </dt> <dd v-if="lastConnectionCheck"> {{ formattedLastConnectionCheckDate }} </dd> <dd v-else> - </dd> </sw-description-list> {% endblock %} {% block swag_migration_shop_information_metadata_lastMigration %} <sw-description-list> <dt>{{ $tc('swag-migration.index.shopInfoCard.lastMigration') }}</dt> <dd v-if="lastMigrationDate !== '-'"> {{ formattedLastMigrationDateTime }} </dd> <dd v-else> {{ $tc('swag-migration.index.shopInfoCard.noMigrationDoneYet') }} </dd> </sw-description-list> {% endblock %} {% endblock %} </div> {% endblock %} </sw-container> </sw-card-section> </sw-container> {% block swag_migration_shop_information_remove_credentials_confirm_modal %} <sw-modal v-if="showRemoveCredentialsConfirmModal" class="swag-migration-shop-information__confirm-modal" :title="$tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.title')" :is-loading="confirmModalIsLoading" size="460px" @modal-close="showRemoveCredentialsConfirmModal = false"> {% block swag_migration_shop_information_remove_credentials_confirm_modal_content %} <p class="swag-migration-shop-information__confirm-modal-content"> {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.content') }} </p> {% endblock %} {% block swag_migration_shop_information_remove_credentials_confirm_modal_content_hint %} <p class="swag-migration-shop-information__confirm-modal-content-hint"> {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.contentHint') }} </p> {% endblock %} {% block swag_migration_shop_information_remove_credentials_confirm_modal_footer %} <template #modal-footer> {% block swag_migration_shop_information_remove_credentials_confirm_modal_abort %} <mt-button size="small" variant="secondary" :disabled="confirmModalIsLoading" @click="showRemoveCredentialsConfirmModal = false"> {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.abortButtonText') }} </mt-button> {% endblock %} {% block swag_migration_shop_information_remove_credentials_confirm_modal_confirm %} <mt-button size="small" variant="primary" :disabled="confirmModalIsLoading" @click="onClickRemoveConnectionCredentials"> {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.confirmButtonText') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block swag_migration_shop_information_reset_checksums_confirm_modal %} <sw-modal v-if="showResetChecksumsConfirmModal" class="swag-migration-shop-information__confirm-modal" :title="$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.title')" :is-loading="confirmModalIsLoading" size="460px" @modal-close="showResetChecksumsConfirmModal = false"> {% block swag_migration_shop_information_reset_checksums_confirm_modal_content %} <p class="swag-migration-shop-information__confirm-modal-content" v-html="$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.content')"> </p> {% endblock %} {% block swag_migration_shop_information_reset_checksums_confirm_modal_content_hint %} <p class="swag-migration-shop-information__confirm-modal-content-hint"> {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.contentHint') }} </p> {% endblock %} {% block swag_migration_shop_information_reset_checksums_confirm_modal_footer %} <template #modal-footer> {% block swag_migration_shop_information_reset_checksums_confirm_modal_abort %} <mt-button size="small" variant="secondary" :disabled="confirmModalIsLoading" @click="showResetChecksumsConfirmModal = false"> {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.abortButtonText') }} </mt-button> {% endblock %} {% block swag_migration_shop_information_reset_checksums_confirm_modal_confirm %} <mt-button size="small" variant="primary" :disabled="confirmModalIsLoading" @click="onClickResetChecksums"> {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.confirmButtonText') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal %} <sw-modal v-if="showResetMigrationConfirmModal" class="swag-migration-shop-information__reset-confirm-modal" :title="$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.title')" :is-loading="confirmModalIsLoading" @modal-close="onCloseResetModal"> {% block swag_migration_shop_information_reset_migration_confirm_modal_icon %} <div class="swag-migration-shop-information__reset-confirm-modal-icon-wrapper"> <mt-icon class="swag-migration-shop-information__confirm-modal-icon" name="regular-trophy" color="#37D046" size="40" /> </div> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal_header %} <p class="swag-migration-shop-information__reset-confirm-modal-header" v-html="$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.header')"> </p> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal_content %} <p class="swag-migration-shop-information__reset-confirm-modal-content" v-html="$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.content')"> </p> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal_content_hint %} <p class="swag-migration-shop-information__reset-confirm-modal-content-hint"> {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.contentHint') }} </p> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal_footer %} <template #modal-footer> {% block swag_migration_shop_information_reset_migration_confirm_modal_abort %} <mt-button size="small" variant="secondary" :disabled="confirmModalIsLoading" @click="onCloseResetModal"> {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.abortButtonText') }} </mt-button> {% endblock %} {% block swag_migration_shop_information_reset_migration_confirm_modal_confirm %} <mt-button size="small" variant="primary" :disabled="confirmModalIsLoading" @click="onClickResetMigration"> {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.confirmButtonText') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> {% endblock %} </mt-card> {% endblock %}`,{Component:B,Mixin:j,Store:w}=Shopware,{mapState:U}=Shopware.Component.getComponentHelper(),{format:u}=Shopware.Utils,{Criteria:f}=Shopware.Data,b=Object.freeze({SUCCESS:"success",DANGER:"danger"});B.register("swag-migration-shop-information",{template:F,inject:{migrationApiService:"migrationApiService",repositoryFactory:"repositoryFactory"},mixins:[j.getByName("notification")],filters:{localizedNumberFormat(i){const t=`${this.adminLocaleLanguage}-${this.adminLocaleRegion}`;return new Intl.NumberFormat(t).format(i)}},props:{connected:{type:Boolean,default:!1}},data(){return{confirmModalIsLoading:!1,showRemoveCredentialsConfirmModal:!1,showResetChecksumsConfirmModal:!1,showResetMigrationConfirmModal:!1,lastMigrationDate:"-",connection:null,context:Shopware.Context.api}},computed:{...U(()=>w.get("swagMigration"),["connectionId","environmentInformation","lastConnectionCheck","adminLocaleLanguage","adminLocaleRegion"]),displayEnvironmentInformation(){return this.environmentInformation===null?{}:this.environmentInformation},migrationRunRepository(){return this.repositoryFactory.create("swag_migration_run")},migrationConnectionRepository(){return this.repositoryFactory.create("swag_migration_connection")},connectionName(){return this.connection!==null?this.connection.name:this.$tc("swag-migration.index.shopInfoCard.noConnection")},shopUrl(){return this.displayEnvironmentInformation.sourceSystemDomain===void 0?"":this.displayEnvironmentInformation.sourceSystemDomain.replace(/^\s*https?:\/\//,"")},shopUrlPrefix(){if(this.displayEnvironmentInformation.sourceSystemDomain===void 0)return"";const i=this.displayEnvironmentInformation.sourceSystemDomain.match(/^\s*https?:\/\//);return i===null?"":i[0]},sslActive(){return this.shopUrlPrefix==="https://"},shopUrlPrefixClass(){return this.sslActive?"swag-migration-shop-information__shop-domain-prefix--is-ssl":""},connectionBadgeLabel(){return this.serverUnreachable?"swag-migration.index.shopInfoCard.serverUnreachable":this.connected?"swag-migration.index.shopInfoCard.connected":"swag-migration.index.shopInfoCard.notConnected"},connectionBadgeVariant(){return this.connected?b.SUCCESS:b.DANGER},shopFirstLetter(){return this.displayEnvironmentInformation.sourceSystemName===void 0?"S":this.displayEnvironmentInformation.sourceSystemName[0]},profile(){return this.connection===null||this.connection.profile===void 0?"":`${this.connection.profile.sourceSystemName} ${this.connection.profile.version} - ${this.connection.profile.author}`},profileIcon(){return this.connection===null||this.connection.profile===void 0||this.connection.profile.icon===void 0?null:this.connection.profile.icon},gateway(){return this.connection===null||this.connection.gateway===void 0?"":this.connection.gateway.snippet},formattedLastConnectionCheckDate(){return u.date(this.lastConnectionCheck)},formattedLastMigrationDateTime(){return u.date(this.lastMigrationDate)},assetFilter(){return Shopware.Filter.getByName("asset")},showMoreInformation(){return this.connection!==null&&this.connection!==void 0}},watch:{$route:{immediate:!0,handler(){this.showResetMigrationConfirmModal=this.$route.meta.resetMigration}},connectionId:{immediate:!0,handler(i){this.fetchConnection(i)}}},created(){this.createdComponent()},methods:{createdComponent(){this.updateLastMigrationDate()},openResetMigrationModal(){this.showResetMigrationConfirmModal=!0,this.$router.push({name:"swag.migration.index.resetMigration"})},onCloseResetModal(){this.showResetMigrationConfirmModal=!1,this.$router.push({name:"swag.migration.index.main"})},updateLastMigrationDate(){const i=new f(1,1);return i.addSorting(f.sort("createdAt","DESC")),this.migrationRunRepository.search(i,this.context).then(t=>{t.length>0?this.lastMigrationDate=t.first().createdAt:this.lastMigrationDate="-"})},fetchConnection(i){return i?this.migrationConnectionRepository.get(i,this.context).then(t=>t?(delete t.credentialFields,this.connection=t,this.migrationApiService.getProfileInformation(t.profileName,t.gatewayName)):Promise.resolve(null)).then(t=>{t&&(this.connection.profile=t.profile,this.connection.gateway=t.gateway)}):Promise.resolve()},onClickEditConnectionCredentials(){this.$router.push({name:"swag.migration.wizard.credentials",params:{connectionId:this.connectionId}})},onClickCreateConnection(){this.$router.push({name:"swag.migration.wizard.connectionCreate"})},onClickCreateInitialConnection(){this.$router.push({name:"swag.migration.wizard.introduction"})},onClickSelectConnection(){this.$router.push({name:"swag.migration.wizard.connectionSelect"})},onClickProfileInstallation(){this.$router.push({name:"swag.migration.wizard.profileInstallation"})},onClickRemoveConnectionCredentials(){return this.confirmModalIsLoading=!0,this.migrationApiService.updateConnectionCredentials(this.connectionId,{}).then(()=>{this.$router.go()})},onClickResetChecksums(){return this.confirmModalIsLoading=!0,this.migrationApiService.resetChecksums(this.connectionId).then(()=>{this.showResetChecksumsConfirmModal=!1,this.confirmModalIsLoading=!1})},onClickResetMigration(){return this.confirmModalIsLoading=!0,this.migrationApiService.cleanupMigrationData().then(()=>{this.showResetMigrationConfirmModal=!1,this.confirmModalIsLoading=!1,this.$nextTick(()=>{this.$router.go()})}).catch(()=>{this.showResetMigrationConfirmModal=!1,this.confirmModalIsLoading=!1,this.createNotificationError({title:this.$t("swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.title"),message:this.$t("swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message"),variant:"error",growl:!0})})},onClickRefreshConnection(){return w.get("swagMigration").init(!0)}}});const H=`{% block swag_migration_premapping %} <div class="swag-migration-premapping"> {% block swag_migration_premapping_unfilled_card %} <mt-card v-if="!isPremappingValid" class="swag-migration-premapping__unfilled-card" position-identifier="swag-migration-premapping" > {% block swag_migration_premapping_unfilled_title %} <div class="swag-migration-premapping__unfilled-title"> {{ $tc('swag-migration.index.premappingCard.unfilledTitle') }} </div> {% endblock %} {% block swag_migration_premapping_unfilled_caption %} <div class="swag-migration-premapping__unfilled-caption"> {{ $tc('swag-migration.index.premappingCard.unfilledCaption') }} </div> {% endblock %} {% block swag_migration_premapping_unfilled_alert %} <mt-banner v-if="!isPremappingValid" class="swag-migration-premapping__alert" variant="critical"> {{ $tc('swag-migration.index.premappingCard.unfilledAlert') }} </mt-banner> {% endblock %} </mt-card> {% endblock %} {% block swag_migration_premapping_success_card %} <mt-card v-if="!isLoading && isPremappingValid" class="swag-migration-premapping__success-card" position-identifier="swag-migration-premapping__success-card"> {% block swag_migration_premapping_success_bubble %} <div class="swag-migration-premapping__success-bubble"> <mt-icon class="swag-migration-premapping__success-icon" name="regular-checkmark" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_premapping_success_title %} <div class="swag-migration-premapping__success-title"> {{ $tc('swag-migration.index.premappingCard.validTitle') }} </div> {% endblock %} {% block swag_migration_premapping_success_caption %} <div class="swag-migration-premapping__success-caption"> {{ $tc('swag-migration.index.premappingCard.validCaption') }} </div> {% endblock %} </mt-card> {% endblock %} {% block swag_migration_premapping_unfilled_mapping %} <swag-migration-tab-card v-if="!isLoading && premapping.length > 0" class="swag-migration-premapping__tab-card" :title="$tc('swag-migration.index.premappingCard.cardTitle')" :items="premapping" > <template #items="{ item }"> <swag-migration-grid-selection :choices="item.choices" :mapping="item.mapping" @update:value="onPremappingChanged" /> </template> </swag-migration-tab-card> {% endblock %} <mt-card v-if="isLoading" class="swag-migration-premapping__loading-card" position-identifier="swag-migration-premapping__loading-card"> <div> {% block swag_migration_premapping_loader %} <mt-loader class="swag-migration-premapping__loader" /> {% endblock %} {% block swag_migration_premapping_loading_title %} <div class="swag-migration-premapping__loading-title"> {{ $tc('swag-migration.index.premappingCard.loadingTitle') }} </div> {% endblock %} {% block swag_migration_premapping_loading_caption %} <div class="swag-migration-premapping__loading-caption"> {{ $tc('swag-migration.index.premappingCard.loadingCaption') }} </div> {% endblock %} </div> </mt-card> </div> {% endblock %}`,{Component:G,Store:d}=Shopware,{mapState:q}=Shopware.Component.getComponentHelper(),{debounce:V}=Shopware.Utils;G.register("swag-migration-premapping",{template:H,inject:{migrationApiService:"migrationApiService"},data(){return{isLoading:!1,premappingInput:[]}},computed:{...q(()=>d.get("swagMigration"),["premapping","dataSelectionIds","isPremappingValid"])},watch:{dataSelectionIds(){this.fetchPremapping()}},methods:{fetchPremapping(){return d.get("swagMigration").setIsLoading(!0),this.isLoading=!0,this.migrationApiService.generatePremapping(this.dataSelectionIds).then(i=>(d.get("swagMigration").setPremapping(i),this.savePremapping())).finally(()=>{d.get("swagMigration").setIsLoading(!1),this.isLoading=!1})},async savePremapping(){!this.premapping||this.premapping.length===0||!this.premapping.every(t=>t.mapping.every(e=>e.destinationUuid!==null&&e.destinationUuid!==void 0&&e.destinationUuid!==""))||await this.migrationApiService.writePremapping(this.premapping)},onPremappingChanged(){d.get("swagMigration").setIsLoading(!0),V(async()=>{await this.savePremapping(),d.get("swagMigration").setIsLoading(!1)},500)()}}});const W='{% block swag_migration_progress_bar %} <div class="swag-migration-progress-bar"> {% block swag_migration_progress_bar_heading %} <div class="swag-migration-progress-bar__heading"> {{ title }} </div> {% endblock %} {% block swag_migration_progress_bar %} <div class="swag-migration-progress-bar__progress-bar-container"> {% block swag_migration_progress_bar_left_point %} <div class="swag-migration-progress-bar__point swag-migration-progress-bar__left-point"> {% block swag_migration_progress_bar_left_bubble %} <div class="swag-migration-progress-bar__bubble swag-migration-progress-bar__bubble--active"> <mt-icon class="swag-migration-progress-bar__icon" name="regular-circle-xs" size="16px" /> </div> {% endblock %} {% block swag_migration_progress_bar_left_description %} <div class="swag-migration-progress-bar__left-description"> {{ leftPointDescription }} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_progress_bar_center_bar %} <div class="swag-migration-progress-bar__center-bar"> {% block swag_migration_progress_bar_progress_bar %} <mt-progress-bar class="swag-migration-progress-bar__progress-bar" :model-value="value" :max-value="maxValue" /> {% endblock %} {% block swag_migration_progress_bar_caption %} <div class="swag-migration-progress-bar__caption"> {{ value }} / {{ maxValue }} </div> {% endblock%} </div> {% endblock %} {% block swag_migration_progress_bar_right_point %} <div class="swag-migration-progress-bar__point swag-migration-progress-bar__right-point"> {% block swag_migration_progress_bar_right_bubble %} <div :class="rightPointClasses"> <mt-icon class="swag-migration-progress-bar__icon" name="regular-checkmark-xs" size="16px" /> </div> {% endblock %} {% block swag_migration_progress_bar_right_description %} <div class="swag-migration-progress-bar__right-description"> {{ rightPointDescription }} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}',{Component:K}=Shopware;K.register("swag-migration-progress-bar",{template:W,props:{title:{type:String,default:"",required:!1},leftPointDescription:{type:String,default:"",required:!1},rightPointDescription:{type:String,default:"",required:!1},value:{type:Number,default:0,required:!1},maxValue:{type:Number,default:100,required:!1}},computed:{rightPointClasses(){return{"swag-migration-progress-bar__bubble":!0,"swag-migration-progress-bar__bubble--disabled":this.value<this.maxValue,"swag-migration-progress-bar__bubble--active":this.value>=this.maxValue}}}});const X=`{% block swag_migration_assistant %} <mt-card class="swag-migration-assistant" position-identifier="swag-migration-assistant" :title="$tc('swag-migration.index.assistantCard.title')"> {% block swag_migration_assistant_headline %} <h4 class="swag-migration-assistant__headline"> {{ $tc('swag-migration.index.assistantCard.headline') }} </h4> {% endblock %} {% block swag_migration_assistant_connection %} <div class="swag-migration-assistant__paragraph"> {% block swag_migration_assistant_connection_illustration %} <img class="swag-migration-assistant__illustration" :src="assetFilter('/swagmigrationassistant/administration/static/img/assistant-connection.svg')" alt=""> {% endblock %} {% block swag_migration_assistant_connection_title %} <h5 class="swag-migration-assistant__title"> {{ $tc('swag-migration.index.assistantCard.connection.title') }} </h5> {% endblock %} {% block swag_migration_assistant_connection_content %} <p class="swag-migration-assistant__content"> {{ $tc('swag-migration.index.assistantCard.connection.content') }} </p> {% endblock %} {% block swag_migration_assistant_connection_content_link %} <div class="swag-migration-assistant__link"> <a class="link" target="_blank" href="http://docs.shopware.com/en/migration-en"> {{ $tc('swag-migration.index.assistantCard.connection.link') }} </a> </div> {% endblock %} </div> {% endblock %} {% block swag_migration_assistant_dataSelection %} <div class="swag-migration-assistant__paragraph"> {% block swag_migration_assistant_dataSelection_illustration %} <img class="swag-migration-assistant__illustration" :src="assetFilter('/swagmigrationassistant/administration/static/img/assistant-dataSelection.svg')" alt=""> {% endblock %} {% block swag_migration_assistant_dataSelection_title %} <h5 class="swag-migration-assistant__title"> {{ $tc('swag-migration.index.assistantCard.dataSelection.title') }} </h5> {% endblock %} {% block swag_migration_assistant_dataSelection_content %} <p class="swag-migration-assistant__content"> {{ $tc('swag-migration.index.assistantCard.dataSelection.content') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_assistant_migrationOverview %} <div class="swag-migration-assistant__paragraph"> {% block swag_migration_assistant_migrationOverview_illustration %} <img class="swag-migration-assistant__illustration" :src="assetFilter('/swagmigrationassistant/administration/static/img/assistant-migrationOverview.svg')" alt=""> {% endblock %} {% block swag_migration_assistant_migrationOverview_title %} <h5 class="swag-migration-assistant__title"> {{ $tc('swag-migration.index.assistantCard.migrationOverview.title') }} </h5> {% endblock %} {% block swag_migration_assistant_migrationOverview_content %} <p class="swag-migration-assistant__content"> {{ $tc('swag-migration.index.assistantCard.migrationOverview.content') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_assistant_finish %} <div class="swag-migration-assistant__paragraph"> {% block swag_migration_assistant_finish_title %} <h5 class="swag-migration-assistant__title"> {{ $tc('swag-migration.index.assistantCard.finish') }} </h5> {% endblock %} </div> {% endblock %} </mt-card> {% endblock %}`,{Component:Y}=Shopware;Y.register("swag-migration-assistant",{computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},template:X});const J=`{% block swag_migration_confirm_warning %} <div class="swag-migration-confirm-warning"> {% block swag_migration_confirm_warning_card %} <mt-card v-if="hasDifferentCurrency" class="swag-migration-confirm-warning__card" position-identifier="swag-migration-confirm-warning__card" > {% block swag_migration_confirm_warning_bubble %} <div class="swag-migration-confirm-warning__bubble"> <mt-icon class="swag-migration-confirm-warning__bubble-icon" name="regular-exclamation-triangle" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_confirm_warning_title %} <h5 class="swag-migration-confirm-warning__title"> {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.title') }} </h5> {% endblock %} {% block swag_migration_confirm_warning_text %} <p class="swag-migration-confirm-warning__text"> {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.text', { sourceSystemCurrency, targetSystemCurrency }, 0) }} </p> {% endblock %} {% block swag_migration_confirm_warning_alert %} <mt-banner variant="critical" class="swag-migration-confirm-warning__alert" > {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.info') }} </mt-banner> {% endblock %} {% block swag_migration_confirm_warning_question %} <p class="swag-migration-confirm-warning__question"> {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.question', { targetSystemCurrency }, 0) }} </p> {% endblock %} {% block swag_migration_confirm_warning_checkbox %} <mt-checkbox v-model:checked="isCurrencyChecked" class="swag-migration-confirm-warning__checkbox" :label="$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')" @update:checked="onCheckboxValueChanged" /> {% endblock %} </mt-card> {% endblock %} {% block swag_migration_confirm_language_warning_card %} <mt-card v-if="hasDifferentLanguage" class="swag-migration-confirm-warning__card" position-identifier="swag-migration-confirm-warning__card" > {% block swag_migration_confirm_language_warning_bubble %} <div class="swag-migration-confirm-warning__bubble"> <mt-icon class="swag-migration-confirm-warning__bubble-icon" name="regular-exclamation-triangle" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_confirm_language_warning_title %} <h5 class="swag-migration-confirm-warning__title"> {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.title') }} </h5> {% endblock %} {% block swag_migration_confirm_language_warning_text %} <p class="swag-migration-confirm-warning__text"> {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.text', { sourceSystemLanguage, targetSystemLanguage }, 0) }} </p> {% endblock %} {% block swag_migration_confirm_language_warning_alert %} <mt-banner variant="critical" class="swag-migration-confirm-warning__alert" > {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.info') }} </mt-banner> {% endblock %} {% block swag_migration_confirm_language_warning_question %} <p class="swag-migration-confirm-warning__question"> {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.question', { targetSystemLanguage }, 0) }} </p> {% endblock %} {% block swag_migration_confirm_language_warning_checkbox %} <mt-checkbox v-model:checked="isLanguageChecked" class="swag-migration-confirm-warning__checkbox" :label="$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')" @update:checked="onCheckboxValueChanged" /> {% endblock %} </mt-card> {% endblock %} </div> {% endblock %}`,{Component:Q,Store:v}=Shopware,{mapState:Z}=Shopware.Component.getComponentHelper();Q.register("swag-migration-confirm-warning",{template:J,data(){return{isCurrencyChecked:!1,isLanguageChecked:!1}},computed:{...Z(()=>v.get("swagMigration"),["environmentInformation"]),hasDifferentCurrency(){return this.sourceSystemCurrency!==this.targetSystemCurrency},sourceSystemCurrency(){return this.environmentInformation.sourceSystemCurrency},targetSystemCurrency(){return this.environmentInformation.targetSystemCurrency},hasDifferentLanguage(){return this.sourceSystemLanguage!==this.targetSystemLanguage},sourceSystemLanguage(){return this.environmentInformation.sourceSystemLocale},targetSystemLanguage(){return this.environmentInformation.targetSystemLocale},isContinuable(){return(!this.hasDifferentCurrency||this.isCurrencyChecked)&&(!this.hasDifferentLanguage||this.isLanguageChecked)}},created(){this.createdComponent()},methods:{createdComponent(){this.onCheckboxValueChanged()},onCheckboxValueChanged(){v.get("swagMigration").setWarningConfirmed(this.isContinuable)}}});const ii='{% block sw_grid_body_slot_items %} <sw-grid-row :key="item.id" ref="rowRefs" :class="extendedGridRowClasses(item, index)" :style="columnFlex" :item="item" :index="index" @inline-edit-finish="onInlineEditFinish" @inline-edit-start="onInlineEditStart"> {% block sw_grid_body_item_selectable %} <div v-if="selectable" class="sw-grid-column"> <div class="sw-grid__cell-content"> <mt-checkbox :checked="isSelected(item.id)" :disabled="isDisabled(item)" @update:checked="selectItem($event, item)" /> </div> </div> {% endblock %} <slot name="columns" :item="item"> {% block sw_grid_slot_columns %}{% endblock %} </slot> </sw-grid-row> {% endblock %}',{Component:ti}=Shopware;ti.extend("swag-migration-grid-extended","sw-grid",{template:ii,props:{disabledAttribute:{type:String,default:"disabled"}},methods:{isDisabled(i){return i[this.disabledAttribute]},extendedGridRowClasses(i,t){const e={"is--selected":this.isSelected(i.id)&&!this.isDisabled(i),"is--deleted":i.isDeleted,"is--new":i.isLocal,"is--disabled":this.isDisabled(i)};return e[`sw-grid__row--${t}`]=!0,e}}});const ei='{% block swag_migration_tab_card %} <div class="swag-migration-tab-card"> <mt-card ref="card" class="sw-card--grid" :title="title" position-identifier="swag-migration-tab-card" > <template #tabs> {% block swag_migration_tab_card_item_tab %} <sw-tabs ref="swTabs" :small="false" position-identifier="swag-migration-tab-card-item-tab" @new-item-active="onNewActiveItem" > <sw-tabs-item v-for="(item, index) in items" :key="getKey(item)" ref="swTabsItems" :name="index.toString()" :has-error="getErrorCountForGroupTab(item) > 0" > {% block swag_migration_tab_card_item_tab_content %} <span class="swag-migration-tab-card__title"> {{ $tc(`swag-migration.index.premappingCard.group.${item.entity}`) }} </span> {% endblock %} {% block swag_migration_tab_card_item_tab_invalid_badge %} <span v-show="getErrorCountForGroupTab(item) > 0" class="swag-migration-tab-card__invalid-badge"> {{ getErrorCountForGroupTab(item) }} </span> {% endblock %} </sw-tabs-item> </sw-tabs> {% endblock %} </template> <template v-for="(item, index) in items" :key="getKey(item)" > <swag-migration-tab-card-item ref="contentContainer"> <slot name="items" :item="item" ></slot> </swag-migration-tab-card-item> </template> <slot> {% block swag_migration_tab_card_slot %}{% endblock %} </slot> </mt-card> </div> {% endblock %}',{Component:ai}=Shopware;ai.register("swag-migration-tab-card",{template:ei,props:{title:{type:String,default:"",required:!1},items:{type:Array,required:!0}},data(){return{selectedNumber:""}},computed:{tabItems(){return this.$refs.swTabsItems}},mounted(){this.mountedComponent()},methods:{mountedComponent(){this.$nextTick(()=>{this.tabItems!==void 0&&this.tabItems.length>0&&(this.selectedNumber=this.tabItems[0].name,setTimeout(()=>{this.$refs.swTabs&&this.$refs.swTabs.setActiveItem(this.tabItems[0])}))})},onNewActiveItem(i){this.$refs.contentContainer[this.selectedNumber].setActive(!1),this.selectedNumber=i.name,this.$refs.contentContainer[this.selectedNumber].setActive(!0)},getErrorCountForGroupTab(i){return i.mapping.reduce((t,e)=>e.destinationUuid?t:t+1,0)},getKey(i){if(!i.entity){console.error("swag-migration-tab-card item without `entity` property",i,"more info here: https://vuejs.org/api/built-in-special-attributes.html#key");return}return i.entity}}});const ni='{% block swag_migration_tab_card_item %} <div class="swag-migration-tab-card-item"> <div v-if="active"> <slot> {% block swag_migration_tab_card_item_slot %}{% endblock %} </slot> </div> </div> {% endblock %}',{Component:oi}=Shopware;oi.register("swag-migration-tab-card-item",{template:ni,data(){return{active:!1}},methods:{setActive(i){this.active=i}}});const ri=`{% block swag_migration_grid_selection %} <div class="swag-migration-grid-selection"> {% block swag_migration_grid_selection_grid %} <sw-grid ref="tableDataGrid" :items="items" :selectable="false"> <template #columns="{ item }"> {% block swag_migration_grid_selection_grid_column_description %} <sw-grid-column flex="1fr" :label="$tc('swag-migration.index.premappingCard.previousTitle')"> {{ item.description }} </sw-grid-column> {% endblock %} {% block swag_migration_grid_selection_grid_column_choice %} <sw-grid-column class="swag-migration-grid-selection__choice-column" flex="1fr" :label="$tc('swag-migration.index.premappingCard.newAssignmentTitle')"> {% block swag_migration_grid_selection_grid_column_choice_field %} <mt-select v-model="item.destinationUuid" class="swag-migration-grid-selection__choice-field" :class="getClassesAfterValidation(item)" :options="selectOptions" @update:model-value="onInput" /> {% endblock %} </sw-grid-column> {% endblock %} </template> {% block swag_migration_grid_selection_grid_pagination %} <template #pagination> <sw-pagination :page="page" :limit="limit" :total="total" :total-visible="7" :steps="paginationSteps" @page-change="onPageChange" /> </template> {% endblock %} </sw-grid> {% endblock %} </div> {% endblock %}`,{Component:si,Mixin:li}=Shopware;si.register("swag-migration-grid-selection",{template:ri,emits:["update:value"],mixins:[li.getByName("listing")],props:{choices:{type:Array,required:!0},mapping:{type:Array,required:!0}},data(){return{items:[],disableRouteParams:!0,limit:10,paginationSteps:[10,20,30,50],selectOptions:[]}},watch:{choices:{handler(i){i&&(this.selectOptions=i.map(t=>({label:t.description,value:t.uuid})))},deep:!0,immediate:!0},mapping(){this.getList()}},methods:{getList(){this.total=this.mapping.length;const i=(this.page-1)*this.limit,t=Math.min(i+this.limit,this.total);this.items.length=0;for(let e=i;e<t;e+=1)this.items.push(this.mapping[e]);return this.items},onInput(){this.$emit("update:value")},getClassesAfterValidation(i){return{"has--error":i.destinationUuid===null||i.destinationUuid.length===0}}}});const ci='{% block swag_migration_expand_div %} <div class="swag-migration-expand-div"> <div class="swag-migration-expand-div__title"> <button class="swag-migration-expand-div__link" @click="onClick"> <div v-if="isExpanded"> {{ expandTitle }} <mt-icon class="swag-migration-expand-div__icon" name="regular-chevron-circle-up" size="16px" /> </div> <div v-else> {{ collapseTitle }} <mt-icon class="swag-migration-expand-div__icon" name="regular-chevron-circle-down" size="16px" /> </div> </button> </div> <div v-if="isExpanded" class="swag-migration-expand-div__slot"> <slot> {% block swag_migration_expand_div_slot %} {% endblock %} </slot> </div> </div> {% endblock %}',{Component:gi}=Shopware;gi.register("swag-migration-expand-div",{template:ci,props:{expandTitle:{type:String,default:"",required:!1},collapseTitle:{type:String,default:"",required:!1}},data(){return{isExpanded:!1}},methods:{onClick(){this.isExpanded=!this.isExpanded}}});const di=`{% block swag_migration_settings_icon %} <img class="swag-migration-settings_icon__img" :src="assetFilter('/swagmigrationassistant/administration/static/img/migration-assistant-plugin.svg')" alt="" > {% endblock %}`,{Component:mi}=Shopware;mi.register("swag-migration-settings-icon",{template:di,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});const pi=`{% block swag_migration_loading_screen %} <div class="swag-migration-loading-screen"> {% block swag_migration_loading_screen_card %} <mt-card class="swag-migration-loading-screen__card" position-identifier="swag-migration-loading-screen__card" > {% block swag_migration_index_loading_screen_content %} <div class="swag-migration-loading-screen__content"> {% block swag_migration_index_loading_screen_header %} <div class="swag-migration-loading-screen__header"> {% block swag_migration_index_loading_screen_title %} <div class="swag-migration-loading-screen__title"> {{ statusLong }} </div> {% endblock %} {% block swag_migration_index_loading_screen_caption %} <div class="swag-migration-loading-screen__caption"> {{ caption }} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_index_loading_screen_progress_bar %} <swag-migration-progress-bar :left-point-description="progressBarLeftPointDescription" :right-point-description="$tc('swag-migration.index.loadingScreenCard.status.finish')" :value="progress" :max-value="total" /> {% endblock %} <mt-banner variant="info" class="swag-migration-loading-screen__notice"> {{ $tc('swag-migration.index.loadingScreenCard.notice') }} <a class="link" :href="$tc('swag-migration.index.loadingScreenCard.documentationLink')" target="_blank"> {{ $tc('swag-migration.index.loadingScreenCard.documentationLinkText') }} </a> </mt-banner> </div> {% endblock %} </mt-card> {% endblock %} </div> {% endblock %}`,{Component:_i}=Shopware;_i.register("swag-migration-loading-screen",{template:pi,props:{step:{type:String,required:!0},progress:{type:Number,required:!0},total:{type:Number,required:!0}},computed:{progressBarLeftPointDescription(){return this.$tc(`swag-migration.index.loadingScreenCard.status.${this.step}.short`)},caption(){return this.$tc(`swag-migration.index.loadingScreenCard.status.${this.step}.caption`)},statusLong(){return this.$tc(`swag-migration.index.loadingScreenCard.status.${this.step}.long`)}}});const hi=`{% block swag_migration_result_screen %} <div> {% block swag_migration_result_screen_card %} <mt-card class="swag-migration-result-screen" position-identifier="swag-migration-result-screen"> {% block swag_migration_result_screen_content %} <div class="swag-migration-result-screen__content"> {% block swag_migration_result_screen_icon %} <div class="swag-migration-result-screen__bubble"> <mt-icon class="swag-migration-result-screen__icon" name="regular-thumbs-up" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_result_screen_title %} <div class="swag-migration-result-screen__title"> {{ $tc('swag-migration.index.loadingScreenCard.result.title') }} </div> <div class="swag-migration-result-screen__caption"> {{ $tc('swag-migration.index.loadingScreenCard.result.caption') }} </div> {% endblock %} </div> {% endblock %} </mt-card> {% endblock %} <mt-card position-identifier="swag-migration-result-screen__log-summary" :is-loading="!latestRun" :title="$tc('swag-migration.index.loadingScreenCard.result.logSummary')" > <mt-banner> {{ $tc('swag-migration.index.loadingScreenCard.result.historyHint') }} </mt-banner> <swag-migration-history-detail-errors v-if="latestRun" :migration-run="latestRun" /> </mt-card> </div> {% endblock %}`,{Component:wi}=Shopware,{Criteria:C}=Shopware.Data;wi.register("swag-migration-result-screen",{template:hi,inject:{repositoryFactory:"repositoryFactory"},data(){return{latestRun:null,context:Shopware.Context.api}},computed:{migrationRunRepository(){return this.repositoryFactory.create("swag_migration_run")}},mounted(){this.mountedComponent()},methods:{async mountedComponent(){this.latestRun=await this.fetchLatestRun()},async fetchLatestRun(){const i=new C(1,1);return i.addSorting(C.sort("createdAt","DESC")),(await this.migrationRunRepository.search(i,this.context)).first()}}});const ui=`{% block swag_migration_base %} <sw-page class="swag-migration-index"> {% block swag_migration_base_smart_bar_header %} <template #smart-bar-header> <h2> {{ $tc('sw-settings.index.title') }} <mt-icon name="regular-chevron-right-xs" size="12"/> {{ $tc('swag-migration.general.mainMenuItemGeneral') }} </h2> </template> {% endblock %} {% block swag_migration_base_smart_bar_actions %} <template v-if="!storesInitializing" #smart-bar-actions> <mt-button variant="primary" :disabled="!isMigrationAllowed" :is-loading="isLoading" @click="onMigrate"> {{ $tc('swag-migration.index.migrateButton') }} </mt-button> </template> {% endblock %} {% block swag_migration_base_content %} <template #content> <sw-card-view v-if="!storesInitializing"> {% block swag_migration_base_content_view %} {% endblock %} </sw-card-view> {% block swag_migration_base_loader_content %} <mt-loader v-if="storesInitializing" /> {% endblock %} </template> {% endblock %} </sw-page> {% endblock %}`,{Component:fi,Store:p}=Shopware,{mapState:bi}=Shopware.Component.getComponentHelper();fi.register("swag-migration-base",{template:ui,inject:{migrationApiService:"migrationApiService"},data(){return{context:Shopware.Context.api,storesInitializing:!0}},metaInfo(){return{title:this.$createTitle()}},computed:{...bi(()=>p.get("swagMigration"),["environmentInformation","connectionId","isLoading","dataSelectionTableData","isMigrationAllowed"])},created(){this.createdComponent()},methods:{async createdComponent(){return await this.checkMigrationBackendState(),this.initState()},async checkMigrationBackendState(){try{const i=await this.migrationApiService.getState();if(!i||!i.step)return;i.step!==n.IDLE&&this.$router.push({name:"swag.migration.processScreen"})}catch{}},async initState(){const i=this.$route.query.forceFullStateReload??!1;await p.get("swagMigration").init(i),this.storesInitializing=!1},onMigrate(){p.get("swagMigration").setIsLoading(!0),this.$router.push({name:"swag.migration.processScreen"})}}});const vi=`{% block swag_migration_base_content_view %} <sw-card-view v-if="!storesInitializing"> {% block swag_migration_index_tabs %} <sw-tabs class="swag-migration-index-tabs" position-identifier="swag-migration-index-tabs"> {% block swag_migration_index_tab_main %} <sw-tabs-item :route="{ name: 'swag.migration.index.main' }" :title="$tc('swag-migration.general.tabMain')"> {{ $tc('swag-migration.general.tabMain') }} </sw-tabs-item> {% endblock %} {% block swag_migration_index_tab_data_selector %} <sw-tabs-item :route="{ name: 'swag.migration.index.dataSelector' }" :title="$tc('swag-migration.general.tabDataSelector')"> {{ $tc('swag-migration.general.tabDataSelector') }} </sw-tabs-item> {% endblock %} {% block swag_migration_index_tab_history %} <sw-tabs-item :route="{ name: 'swag.migration.index.history' }" :title="$tc('swag-migration.general.tabHistory')"> {{ $tc('swag-migration.general.tabHistory') }} </sw-tabs-item> {% endblock %} </sw-tabs> {% endblock %} {% block swag_migration_index_content_view %} <router-view ref="contentComponent" /> {% endblock %} </sw-card-view> {% endblock %}`,{Component:Ci}=Shopware;Ci.extend("swag-migration-index","swag-migration-base",{template:vi,computed:{tabItems(){return[{name:"swag.migration.index.main",label:this.$tc("swag-migration.general.tabMain")},{name:"swag.migration.index.dataSelector",label:this.$tc("swag-migration.general.tabDataSelector")},{name:"swag.migration.index.history",label:this.$tc("swag-migration.general.tabHistory")}]}},methods:{setActiveTab(i){this.$router.push({name:i.name})}}});const ki='{% block swag_migration_index_main_page %} <div class="swag-migration-index-main-page"> {% block swag_migration_index_main_page_content %} <div v-if="!isLoading"> {% block swag_migration_index_main_page_warnings %} <div class="swag-migration-index-main-page__warnings"> <template v-for="warning in displayWarnings" :key="warning.snippetKey" > <mt-banner class="swag-migration-index-main-page__warning" variant="attention" > {{ $tc(warning.snippetKey, warning.snippetArguments, warning.pluralizationCount) }} </mt-banner> </template> </div> {% endblock %} {% block swag_migration_index_main_page_card_shopInformation %} <swag-migration-shop-information :connected="connectionEstablished" /> {% endblock %} </div> {% endblock %} {% block swag_migration_index_main_page_assistant %} <swag-migration-assistant v-if="!isLoading" /> {% endblock %} {% block swag_migration_index_main_page_loader %} <mt-loader v-if="isLoading" /> {% endblock %} </div> {% endblock %}',{Component:yi}=Shopware;yi.register("swag-migration-main-page",{template:ki,metaInfo(){return{title:this.$createTitle()}},computed:{environmentInformation(){return Shopware.Store.get("swagMigration").environmentInformation},connectionId(){return Shopware.Store.get("swagMigration").connectionId},isLoading(){return Shopware.Store.get("swagMigration").isLoading},displayWarnings(){return this.environmentInformation.displayWarnings},connectionEstablished(){return this.environmentInformation!==void 0&&this.environmentInformation.requestStatus&&(this.environmentInformation.requestStatus.isWarning===!0||this.environmentInformation.requestStatus.isWarning===!1&&this.environmentInformation.requestStatus.code==="")}}});const Si='{% block swag_migration_base_content_view %} <div class="swag-migration-wizard"> <sw-modal v-if="showModal" class="swag-migration-wizard__modal" :size="modalSize" :title="$tc(modalTitleSnippet)" :is-loading="isLoading || storesInitializing" @modal-close="onCloseModal"> {% block swag_migration_wizard_placeholder %} <div v-show="isLoading || storesInitializing || childIsLoading" class="swag-migration-wizard__placeholder"></div> {% endblock %} {% block swag_migration_router_view %} <router-view v-slot="{ Component }"> <component :is="Component" v-show="!isLoading && !childIsLoading && !storesInitializing" :current-connection-id="connection.id" :profile-information-component="profileInformationComponent" :credentials-component="credentialsComponent" :credentials="connection.credentialFields" :error-message-snippet="errorMessageSnippet" :error-message-hint-snippet="errorMessageHintSnippet" :connection-name-error-code="connectionNameErrorCode" @on-child-route-ready-changed="onChildRouteReadyChanged" @on-trigger-primary-click="triggerPrimaryClick" @on-profile-selected="onProfileSelected" @on-change-connection-name="onChangeConnectionName" @on-connection-selected="onConnectionSelected" @on-credentials-changed="onCredentialsChanged" @on-is-loading-changed="onChildIsLoadingChanged" /> </router-view> {% endblock %} <template #modal-footer> <div class="swag-migration-wizard__footer"> {% block swag_migration_wizard_footer %} {% block swag_migration_wizard_arrow %} <div class="swag-migration-wizard__left-actions"> <mt-button v-show="buttonBackVisible" variant="secondary" class="swag-migration-wizard__buttonBack" size="small" @click="onButtonBackClick"> {{ $tc(buttonBackSnippet) }} </mt-button> </div> {% endblock %} {% block swag_migration_wizard_actions %} <div class="swag-migration-wizard__right-actions"> {% block swag_migration_wizard_actions_previous %} <mt-button v-show="buttonSecondaryVisible" variant="secondary" size="small" @click="onButtonSecondaryClick"> {{ $tc(buttonSecondarySnippet) }} </mt-button> {% endblock %} {% block swag_migration_wizard_actions_next %} <mt-button size="small" variant="primary" :disabled="buttonPrimaryDisabled" @click="onButtonPrimaryClick"> {{ $tc(buttonPrimarySnippet) }} </mt-button> {% endblock %} </div> {% endblock %} {% endblock %} </div> </template> </sw-modal> </div> {% endblock %}',{Component:k,Mixin:xi,Store:r}=Shopware,{Criteria:m}=Shopware.Data,y="SWAG_MIGRATION__SSL_REQUIRED",{mapState:Ii}=Shopware.Component.getComponentHelper(),S=Object.freeze({NAME_TO_SHORT:"SWAG_MIGRATION_CONNECTION_NAME_TO_SHORT",NAME_ALREADY_EXISTS:"SWAG_MIGRATION_CONNECTION_NAME_ALREADY_EXISTS"});k.register("swag-migration-wizard",{template:Si,inject:{migrationApiService:"migrationApiService",repositoryFactory:"repositoryFactory"},mixins:[xi.getByName("swag-wizard")],data(){const i=this.getRoutes();return{context:Shopware.Context.api,storesInitializing:!0,showModal:!0,isLoading:!0,childIsLoading:!1,routes:i,connection:{},connectionName:"",selectedProfile:{},childRouteReady:!1,errorMessageSnippet:"",errorMessageHintSnippet:"",connectionNameErrorCode:"",currentErrorCode:""}},metaInfo(){return{title:this.$createTitle()}},computed:{...Ii(()=>r.get("swagMigration"),["connectionId"]),migrationConnectionRepository(){return this.repositoryFactory.create("swag_migration_connection")},migrationGeneralSettingRepository(){return this.repositoryFactory.create("swag_migration_general_setting")},modalSize(){return[this.routes.credentialsSuccess,this.routes.credentialsError].includes(this.currentRoute)?"460px":"688px"},modalTitleSnippet(){return this.currentRoute.titleSnippet},buttonBackSnippet(){return"swag-migration.wizard.buttonToProfileInformation"},buttonBackVisible(){return!this.isLoading&&this.currentRoute===this.routes.credentials&&this.profileInformationComponentIsLoaded},buttonSecondarySnippet(){return this.currentRoute===this.routes.credentialsError?"swag-migration.wizard.buttonLater":"swag-migration.wizard.buttonAbort"},buttonSecondaryVisible(){return this.currentRoute!==this.routes.credentialsSuccess},buttonPrimarySnippet(){return this.currentRoute===this.routes.introduction?"swag-migration.wizard.buttonLetsGo":this.currentRoute===this.routes.connectionCreate?"swag-migration.wizard.buttonConnectionCreate":this.currentRoute===this.routes.connectionSelect?"swag-migration.wizard.buttonConnectionSelect":this.currentRoute===this.routes.credentials?"swag-migration.wizard.buttonConnect":this.currentRoute===this.routes.credentialsSuccess?"swag-migration.wizard.buttonFinish":this.currentRoute===this.routes.credentialsError?this.currentErrorCode===y?"swag-migration.wizard.buttonUseSsl":"swag-migration.wizard.buttonEdit":"swag-migration.wizard.buttonNext"},buttonPrimaryDisabled(){return[this.routes.credentials,this.routes.connectionCreate,this.routes.connectionSelect].includes(this.currentRoute)?!this.childRouteReady||this.isLoading:this.isLoading},profileInformationComponent(){return!this.connection||!this.connection.profileName||!this.connection.gatewayName?"":`swag-migration-profile-${this.connection.profileName}-${this.connection.gatewayName}-page-information`},profileInformationComponentIsLoaded(){return k.getComponentRegistry().has(this.profileInformationComponent)},credentialsComponent(){return!this.connection||!this.connection.profileName||!this.connection.gatewayName?"":`swag-migration-profile-${this.connection.profileName}-${this.connection.gatewayName}-credential-form`}},beforeRouteLeave(i,t,e){this.showModal=!1,this.$nextTick(()=>{e()})},created(){this.createdComponent()},methods:{async createdComponent(){await this.checkMigrationBackendState(),await this.initState(),await this.loadSelectedConnection(this.connectionId),this.isLoading=!1,this.onChildRouteChanged()},async checkMigrationBackendState(){try{const i=await this.migrationApiService.getState();if(!i||!i.step)return;i.step!==n.IDLE&&this.$router.push({name:"swag.migration.processScreen"})}catch{}},async initState(){const i=this.$route.query.forceFullStateReload??!1;await r.get("swagMigration").init(i),this.storesInitializing=!1},getRoutes(){return{introduction:{name:"swag.migration.wizard.introduction",index:0,titleSnippet:"swag-migration.wizard.pages.introduction.title"},profileInstallation:{name:"swag.migration.wizard.profileInstallation",index:.1,titleSnippet:"swag-migration.wizard.pages.profileInstallation.title"},connectionCreate:{name:"swag.migration.wizard.connectionCreate",index:.2,titleSnippet:"swag-migration.wizard.pages.connectionCreate.title"},connectionSelect:{name:"swag.migration.wizard.connectionSelect",index:.3,titleSnippet:"swag-migration.wizard.pages.connectionSelect.title"},profileInformation:{name:"swag.migration.wizard.profileInformation",index:1,titleSnippet:"swag-migration.wizard.pages.profileInformation.title"},credentials:{name:"swag.migration.wizard.credentials",index:2,titleSnippet:"swag-migration.wizard.pages.credentials.title"},credentialsSuccess:{name:"swag.migration.wizard.credentialsSuccess",index:2.1,titleSnippet:"swag-migration.wizard.pages.credentials.statusTitle"},credentialsError:{name:"swag.migration.wizard.credentialsError",index:2.1,titleSnippet:"swag-migration.wizard.pages.credentials.statusTitle"}}},trimCredentials(){Object.keys(this.connection.credentialFields).forEach(i=>{this.connection.credentialFields[i]=this.connection.credentialFields[i].trim()})},onConnect(){return this.isLoading=!0,this.errorMessageSnippet="",this.trimCredentials(),this.migrationApiService.updateConnectionCredentials(this.connection.id,this.connection.credentialFields).then(i=>(i.errors&&i.errors.length>0&&(this.isLoading=!1,this.onResponseError("")),this.doConnectionCheck())).catch(i=>{this.isLoading=!1,this.onResponseError(i.response.data.errors[0].code)})},doConnectionCheck(){return this.isLoading=!0,this.migrationApiService.checkConnection(this.connection.id).then(i=>{if(r.get("swagMigration").setConnectionId(this.connection.id),this.isLoading=!1,!i){this.onResponseError(-1);return}if(r.get("swagMigration").setEnvironmentInformation(i),r.get("swagMigration").setDataSelectionIds([]),r.get("swagMigration").setPremapping([]),r.get("swagMigration").setDataSelectionTableData([]),i.requestStatus===void 0){this.navigateToRoute(this.routes.credentialsSuccess);return}if(i.requestStatus.code!==""&&i.requestStatus.isWarning===!1){this.onResponseError(i.requestStatus.code);return}this.errorMessageSnippet="",i.requestStatus.code!==""&&i.requestStatus.isWarning===!0&&(this.errorMessageSnippet=`swag-migration.wizard.pages.credentials.success.${i.requestStatus.code}`),this.navigateToRoute(this.routes.credentialsSuccess)}).catch(i=>{this.isLoading=!1,r.get("swagMigration").setConnectionId(this.connection.id),r.get("swagMigration").setEnvironmentInformation({}),r.get("swagMigration").setDataSelectionIds([]),r.get("swagMigration").setPremapping([]),r.get("swagMigration").setDataSelectionTableData([]),this.onResponseError(i.response.data.errors[0].code)})},onResponseError(i){i!==""?(this.errorMessageSnippet=`swag-migration.wizard.pages.credentials.error.${i}`,this.$te(`swag-migration.wizard.pages.credentials.error.${i}__HINT`)&&(this.errorMessageHintSnippet=`swag-migration.wizard.pages.credentials.error.${i}__HINT`)):(this.errorMessageSnippet="",this.errorMessageHintSnippet=""),this.errorMessageSnippet===this.$tc(`swag-migration.wizard.pages.credentials.error.${i}`)&&(this.errorMessageSnippet="swag-migration.wizard.pages.credentials.error.undefinedErrorMsg",this.$te("swag-migration.wizard.pages.credentials.error.undefinedErrorMsg__HINT")&&(this.errorMessageHintSnippet="swag-migration.wizard.pages.credentials.error.undefinedErrorMsg__HINT")),this.currentErrorCode=i,this.navigateToRoute(this.routes.credentialsError)},onCloseModal(){this.showModal=!1,this.$router.push({name:"swag.migration.index.main",query:{forceFullStateReload:!0}})},onChildRouteChanged(){this.isLoading||this.checkForDisabledRoute()},checkForDisabledRoute(){if(!Object.keys(this.connection).length){this.onNoConnectionSelected();return}this.profileInformationComponentIsLoaded||(this.currentRoute===this.routes.profileInformation&&this.navigateToRoute(this.routes.credentials),this.routes.profileInformation.index=.1)},onButtonBackClick(){this.navigateToRoute(this.routes.profileInformation)},onButtonSecondaryClick(){this.onCloseModal()},triggerPrimaryClick(){this.buttonPrimaryDisabled||this.onButtonPrimaryClick()},onButtonPrimaryClick(){if(this.currentRoute===this.routes.connectionCreate){this.createNewConnection().then(()=>{this.navigateToNext()}).catch(()=>{this.connectionNameErrorCode=S.NAME_ALREADY_EXISTS,this.isLoading=!1});return}if(this.currentRoute===this.routes.connectionSelect){this.saveSelectedConnection(this.connection).then(()=>this.doConnectionCheck()).catch(()=>{this.isLoading=!1});return}if(this.currentRoute===this.routes.credentials){this.onConnect();return}if(this.currentRoute===this.routes.credentialsSuccess){this.onCloseModal();return}if(this.currentRoute===this.routes.credentialsError){if(this.currentErrorCode===y){this.connection.credentialFields.endpoint=this.connection.credentialFields.endpoint.replace("http:","https:"),this.onConnect();return}this.navigateToRoute(this.routes.credentials);return}if(this.currentRoute===this.routes.profileInstallation){this.navigateToRoute(this.routes.connectionCreate);return}this.navigateToNext()},async loadSelectedConnection(i){if(Object.keys(this.connection).length)return;if(this.isLoading=!0,i!==void 0){await this.fetchConnection(i);return}const t=new m(1,1),e=this.migrationGeneralSettingRepository.search(t,this.context);if(e.length<1){this.isLoading=!1,this.onNoConnectionSelected();return}if(e.first().selectedConnectionId===null){this.isLoading=!1,this.onNoConnectionSelected();return}await this.fetchConnection(e.first().selectedConnectionId)},fetchConnection(i){return new Promise(t=>{const e=new m(1,1);e.addFilter(m.equals("id",i)),this.migrationConnectionRepository.search(e,this.context).then(a=>{if(a.length===0||a.first().id===null){this.isLoading=!1,this.onNoConnectionSelected(),t();return}this.connection=a.first(),this.isLoading=!1,t()})})},onNoConnectionSelected(){[this.routes.chooseAction,this.routes.profileInformation,this.routes.credentials,this.routes.credentialsSuccess,this.routes.credentialsError].includes(this.currentRoute)&&this.navigateToRoute(this.routes.profileInstallation)},createNewConnection(){return this.isLoading=!0,this.checkConnectionName(this.connectionName).then(i=>{if(!i)return this.isLoading=!1,Promise.reject();this.connectionNameErrorCode="";const t=this.migrationConnectionRepository.create(this.context);return t.profileName=this.selectedProfile.profile,t.gatewayName=this.selectedProfile.gateway,t.name=this.connectionName,this.migrationConnectionRepository.save(t,this.context).then(()=>this.saveSelectedConnection(t))})},checkConnectionName(i){const t=new m;return t.addFilter(m.equals("name",i)),this.migrationConnectionRepository.search(t,this.context).then(e=>e.length===0)},saveSelectedConnection(i){return new Promise((t,e)=>{this.isLoading=!0,r.get("swagMigration").setConnectionId(i.id),r.get("swagMigration").setEnvironmentInformation({}),r.get("swagMigration").setDataSelectionIds([]),r.get("swagMigration").setPremapping([]),r.get("swagMigration").setDataSelectionTableData([]);const a=new m(1,1);this.migrationGeneralSettingRepository.search(a,this.context).then(o=>{if(o.length<1){this.isLoading=!1,e();return}const l=o.first();l.selectedConnectionId=i.id,this.migrationGeneralSettingRepository.save(l,this.context).then(()=>{this.connection=i,this.isLoading=!1,t()}).catch(()=>{this.isLoading=!1,e()})}).catch(()=>{this.isLoading=!1,e()})})},onChildRouteReadyChanged(i){this.childRouteReady=i},onCredentialsChanged(i){this.connection.credentialFields=i},onProfileSelected(i){this.selectedProfile=i},onChangeConnectionName(i){if(this.connectionName=i,this.connectionName!==null&&this.connectionName.length>0){this.connectionNameErrorCode="";return}this.connectionNameErrorCode=S.NAME_TO_SHORT},onChildIsLoadingChanged(i){this.childIsLoading=i},onConnectionSelected(i){this.connection=i}}});const $i=`{% block swag_migration_wizard_page_introduction %} <div class="swag-migration-wizard swag-migration-wizard-page-introduction"> {% block swag_migration_wizard_page_introduction_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_introduction_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_introduction_svg %} <img class="swag-migration-wizard__illustration" :src="assetFilter('/swagmigrationassistant/administration/static/img/wizard-introduction.svg')" alt=""> {% endblock %} {% block swag_migration_wizard_page_introduction_api_hint %} <h3 class="swag-migration-wizard__headline"> {{ $tc('swag-migration.wizard.pages.introduction.contentHeadline') }} </h3> <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.introduction.contentInformation') }} </p> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:zi}=Shopware;zi.register("swag-migration-wizard-page-introduction",{template:$i,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}},metaInfo(){return{title:this.$createTitle()}}});const Ri=`{% block swag_migration_wizard_page_profile_installation %} <div class="swag-migration-wizard swag-migration-wizard-page-profile-installation"> {% block swag_migration_wizard_page_profile_installation_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_profile_installation_information %} <div class="swag-migration-wizard__content-information"> {{ $tc('swag-migration.wizard.pages.profileInstallation.content') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_plugins %} <div class="swag-migration-wizard-profile-installation__plugins"> {% block swag_migration_wizard_page_profile_installation_availabilty_headline %} <div class="swag-migration-wizard-profile-installation__availability-headline"> {{ $tc('swag-migration.wizard.pages.profileInstallation.availabilityHeadline') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_wrapper %} <div class="swag-migration-wizard-profile-installation__wrapper"> {% block swag_migration_wizard_page_profile_installation_shopware_inner_wrapper %} <div class="swag-migration-wizard-profile-installation__inner_wrapper"> {% block swag_migration_wizard_page_profile_installation_shopware_plugin_icon %} <div class="swag-migration-wizard-profile-installation__plugin_icon_column"> <img class="swag-migration-wizard-profile-installation__plugin-icon" :src="assetFilter('/swagmigrationassistant/administration/static/img/wizard-shopware6-profile-avatar.svg')" alt=""> </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_shopware_plugin_information %} <div class="swag-migration-wizard-profile-installation__plugin_information_column"> {% block swag_migration_wizard_page_profile_installation_shopware_headline %} <div class="swag-migration-wizard-profile-installation__profile_headline"> {{ $tc('swag-migration.wizard.pages.profileInstallation.shopwareProfileHeadline') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_shopware_manufacturer %} <div class="swag-migration-wizard-profile-installation__profile_manufacturer"> {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_shopware_available_version_headline %} <div class="swag-migration-wizard-profile-installation__available_version_headline"> {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_shopware_available_version_list %} <div class="swag-migration-wizard-profile-installation__available_version_list"> <span class="swag-migration-wizard-profile-installation__version_box">5.4</span> <span class="swag-migration-wizard-profile-installation__version_box">5.5</span> <span class="swag-migration-wizard-profile-installation__version_box">5.6</span> <span class="swag-migration-wizard-profile-installation__version_box">5.7</span> <span class="swag-migration-wizard-profile-installation__last_version_box">{{ version }}</span> </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_shopware_installed_box %} <div class="swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box"> <span class="swag-migration-wizard-profile-installation__installed_img"> <mt-icon name="regular-check-circle-s" size="16px" /> </span> <span class="swag-migration-wizard-profile-installation__installed_title">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_inner_wrapper %} <div class="swag-migration-wizard-profile-installation__shopware-plugin swag-migration-wizard-profile-installation__inner_wrapper"> {% block swag_migration_wizard_page_profile_installation_magento_plugin_icon %} <div class="swag-migration-wizard-profile-installation__plugin_icon_column"> <img class="swag-migration-wizard-profile-installation__plugin-icon" :src="assetFilter('/swagmigrationassistant/administration/static/img/magento-profile-icon.svg')" alt=""> </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_plugin_information %} <div class="swag-migration-wizard-profile-installation__plugin_information_column"> {% block swag_migration_wizard_page_profile_installation_magento_headline %} <div class="swag-migration-wizard-profile-installation__profile_headline"> {{ $tc('swag-migration.wizard.pages.profileInstallation.magentoProfileHeadline') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_manufacturer %} <div class="swag-migration-wizard-profile-installation__profile_manufacturer"> {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_available_version_headline %} <div class="swag-migration-wizard-profile-installation__available_version_headline"> {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_available_version_list %} <div class="swag-migration-wizard-profile-installation__available_version_list"> <span class="swag-migration-wizard-profile-installation__version_box">1.9</span> <span class="swag-migration-wizard-profile-installation__version_box">2.0</span> <span class="swag-migration-wizard-profile-installation__version_box">2.1</span> <span class="swag-migration-wizard-profile-installation__version_box">2.2</span> <span class="swag-migration-wizard-profile-installation__last_version_box">2.3</span> </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_install_button_box %} <div v-if="!isInstalled" class="swag-migration-wizard-profile-installation__footer"> {% block swag_migration_wizard_page_profile_installation_magento_install_button_box_content %} <sw-button-process class="swag-migration-wizard-profile-installation__installation_button" size="small" variant="primary" :is-loading="pluginIsLoading" :disabled="pluginIsLoading" :process-success="pluginIsSaveSuccessful" @click="onInstall"> {{ $tc('swag-migration.wizard.pages.profileInstallation.installationButton') }} </sw-button-process> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_profile_installation_magento_installed_box %} <div v-else class="swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box"> {% block swag_migration_wizard_page_profile_installation_magento_installed_box_content %} <span class="swag-migration-wizard-profile-installation__installed_img"> <mt-icon name="regular-check-circle-s" size="16px" /> </span> <span class="swag-migration-wizard-profile-installation__installed_title">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Mi}=Shopware,{Criteria:_}=Shopware.Data;Mi.register("swag-migration-wizard-page-profile-installation",{template:Ri,inject:["storeService","extensionHelperService","cacheApiService","repositoryFactory"],data(){return{pluginIsLoading:!1,pluginIsSaveSuccessful:!1,isInstalled:!1,pluginName:"SwagMigrationMagento"}},metaInfo(){return{title:this.$createTitle()}},computed:{version(){const t=Shopware.Context.app.config.version.split(".");return[t[0],t[1]].join(".")},pluginRepository(){return this.repositoryFactory.create("plugin")},assetFilter(){return Shopware.Filter.getByName("asset")}},created(){this.createdComponent()},methods:{createdComponent(){this.refreshPlugin()},refreshPlugin(){const i=new _;return i.addFilter(_.equals("plugin.name",this.pluginName)).addFilter(_.equals("plugin.active",!0)).setLimit(1),this.pluginRepository.search(i,Shopware.Context.api).then(t=>{t.total<1||(this.isInstalled=!0)})},onInstall(){this.setupPlugin()},setupPlugin(){return this.pluginIsLoading=!0,this.pluginIsSaveSuccessful=!1,this.extensionHelperService.downloadStoreExtension(this.pluginName).then(()=>(this.pluginIsSaveSuccessful=!0,this.extensionHelperService.installStoreExtension(this.pluginName,"plugin"))).then(()=>this.extensionHelperService.activateStoreExtension(this.pluginName,"plugin")).finally(()=>{this.pluginIsLoading=!1,this.cacheApiService.clear().then(()=>{window.location.reload()})})}}});const Li=`{% block swag_migration_wizard_page_select_profile %} <div class="swag-migration-wizard-page-select-profile"> {% block swag_migration_wizard_page_select_profile_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_select_profile_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_select_profile_description %} <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.connectionSelect.contentInformation') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_select_profile_selection %} <div class="swag-migration-wizard__form"> <mt-select v-model:model-value="selectedConnectionId" :options="connections" :label="$tc('swag-migration.wizard.pages.connectionSelect.connectionLabel')" :placeholder="$tc('swag-migration.wizard.pages.connectionSelect.connectionPlaceholder')" @update:model-value="onConnectionSelected" /> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Pi}=Shopware,{Criteria:Di}=Shopware.Data;Pi.register("swag-migration-wizard-page-connection-select",{template:Li,inject:{repositoryFactory:"repositoryFactory"},emits:["onChildRouteReadyChanged","onConnectionSelected"],props:{currentConnectionId:{type:String,default:""}},data(){return{selectedConnectionId:null,connections:[],context:Shopware.Context.api}},metaInfo(){return{title:this.$createTitle()}},computed:{migrationConnectionRepository(){return this.repositoryFactory.create("swag_migration_connection")}},watch:{currentConnectionId:{immediate:!0,handler(i){this.selectedConnectionId=i,this.onConnectionSelected()}}},created(){this.createdComponent()},methods:{createdComponent(){this.$emit("onChildRouteReadyChanged",!1);const i=new Di(1,100);return this.migrationConnectionRepository.search(i,this.context).then(t=>{this.connections=t,this.onConnectionSelected()})},onConnectionSelected(){const i=this.connections.find(t=>t.id===this.selectedConnectionId);i?(this.$emit("onChildRouteReadyChanged",!0),this.$emit("onConnectionSelected",i)):this.$emit("onChildRouteReadyChanged",!1)}}});const Ei=`{% block swag_migration_wizard_page_create_profile %} <div class="swag-migration-wizard swag-migration-wizard-page-create-profile"> {% block swag_migration_wizard_page_create_profile_content %} <div v-if="!isLoading" class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_create_profile_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_create_profile_content_information %} <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.connectionCreate.contentInformation') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_create_profile_selection %} <div class="swag-migration-wizard__form"> <mt-banner v-if="profileHint"> {{ profileHint }} </mt-banner> <mt-text-field v-model:model-value="selection.connectionName" v-autofocus :label="$tc('swag-migration.wizard.pages.connectionCreate.connectionLabel')" :placeholder="$tc('swag-migration.wizard.pages.connectionCreate.connectionPlaceholder')" validation="required" :help-text="$tc('swag-migration.wizard.pages.connectionCreate.connectionTooltip')" :error="connectionNameError" @update:model-value="onChangeConnectionName" /> <sw-single-select v-model:value="selection.profile" :label="$tc('swag-migration.wizard.pages.connectionCreate.profileLabel')" :placeholder="$tc('swag-migration.wizard.pages.connectionCreate.profilePlaceholder')" :popover-classes="['swag-migration-wizard-page-create-profile']" :popover-config="{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}" :options="profiles" value-property="name" :search-function="profileSearch" validation="required" @update:value="onSelectProfile" > {% block swag_migration_wizard_page_create_profile_form_profile_field_options %} <template #selection-label-property="{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }"> <span v-html="getText(singleSelection)"></span> </template> <template #result-label-property="{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }"> <div v-if="item.name === 'profileLink'" class="swag-migration-wizard-create-connection__install-profile-link-wrapper"> <div> {{ $tc('swag-migration.wizard.pages.connectionCreate.profileInstall') }} </div> <div> <mt-icon name="regular-chevron-right-xs" size="16" /> </div> </div> <span v-else v-html="getText(item)"> </span> </template> {% endblock %} </sw-single-select> <sw-single-select v-model:value="selection.gateway" :label="$tc('swag-migration.wizard.pages.connectionCreate.gatewayLabel')" :placeholder="$tc('swag-migration.wizard.pages.connectionCreate.gatewayPlaceholder')" :help-text="$tc('swag-migration.wizard.pages.connectionCreate.gatewayTooltip')" :popover-classes="['swag-migration-wizard-page-create-profile']" :popover-config="{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}" :options="gateways" value-property="name" :search-function="gatewaySearch" validation="required" @update:value="onSelectGateway"> {% block swag_migration_wizard_page_create_profile_form_gateway_field_options %} <template #selection-label-property="{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }"> {{ $tc(singleSelection.snippet) }} </template> <template #result-label-property="{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }"> {{ $tc(item.snippet) }} </template> {% endblock %} </sw-single-select> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Ni}=Shopware,Ti=Shopware.Classes.ShopwareError;Ni.register("swag-migration-wizard-page-connection-create",{template:Ei,inject:{migrationApiService:"migrationApiService"},emits:["onIsLoadingChanged","onProfileSelected","onChangeConnectionName","onChildRouteReadyChanged"],props:{connectionNameErrorCode:{type:String,default:"",required:!1}},data(){return{isLoading:!0,selection:{profile:null,gateway:null,connectionName:null},profiles:[],gateways:[]}},metaInfo(){return{title:this.$createTitle()}},computed:{isReady(){return this.selection.profile!==null&&this.selection.gateway!==null&&this.selection.connectionName!==null&&this.selection.connectionName.length>0},connectionNameError(){return this.connectionNameErrorCode===""?null:new Ti({code:this.connectionNameErrorCode})},profileHint(){if(!this.selection.gateway)return"";const i=`swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`;return this.$tc(i)!==`swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`?this.$tc(i):""}},created(){this.createdComponent()},methods:{async createdComponent(){this.setIsLoading(!0),this.emitOnChildRouteReadyChanged(!1),this.profiles=await this.migrationApiService.getProfiles(),this.pushLinkToProfiles(),await this.selectDefaultProfile(),this.setIsLoading(!1)},pushLinkToProfiles(){this.profiles.push({name:"profileLink"})},profileSearch(i){const t=i.searchTerm;return i.options.filter(e=>`${e.sourceSystemName} ${e.version} - ${e.author}`.toLowerCase().includes(t.toLowerCase()))},gatewaySearch(i){const t=i.searchTerm;return i.options.filter(e=>this.$tc(e.snippet).toLowerCase().includes(t.toLowerCase()))},getText(i){return`${i.sourceSystemName} ${i.version} - <i>${i.author}</i>`},async selectDefaultProfile(){await this.onSelectProfile("shopware55"),this.onSelectGateway("api")},setIsLoading(i){this.isLoading=i,this.$emit("onIsLoadingChanged",this.isLoading)},onSelectProfile(i){return i==null?Promise.resolve():i==="profileLink"?(this.$router.push({name:"swag.migration.wizard.profileInstallation"}),Promise.resolve()):(this.selection.profile=i,new Promise(t=>{this.emitOnChildRouteReadyChanged(!1),this.gateways=[],this.selection.gateway=null,this.selection.profile!==null&&this.migrationApiService.getGateways(this.selection.profile).then(e=>{this.gateways=e,this.selection.gateway=null,this.gateways.length===1&&this.$nextTick(()=>{this.selection.gateway=this.gateways[0].name,this.emitOnChildRouteReadyChanged(this.isReady)}),this.emitOnChildRouteReadyChanged(this.isReady),t()})}))},onSelectGateway(i){i!=null&&(this.selection.gateway=i),this.emitOnChildRouteReadyChanged(!1),this.$emit("onProfileSelected",this.selection),this.emitOnChildRouteReadyChanged(this.isReady)},onChangeConnectionName(i){this.$emit("onChangeConnectionName",i),this.emitOnChildRouteReadyChanged(this.isReady)},emitOnChildRouteReadyChanged(i){this.$emit("onChildRouteReadyChanged",i)}}});const Ai=`{% block swag_migration_wizard_page_profile_information %} <div> {% block swag_migration_wizard_page_profile_information_component %} <component :is="profileInformationComponent" v-if="profileInformationComponent !== '' && componentIsLoaded" /> {% endblock %} </div> {% endblock %}`,{Component:x}=Shopware;x.register("swag-migration-wizard-page-profile-information",{template:Ai,props:{profileInformationComponent:{type:String,default:""}},metaInfo(){return{title:this.$createTitle()}},computed:{componentIsLoaded(){return x.getComponentRegistry().has(this.profileInformationComponent)}}});const Oi=`{% block swag_migration_wizard_page_credentials %} <div class="swag-migration-wizard-page-credentials"> {% block swag_migration_wizard_page_credentials_forms %} <component :is="credentialsComponent" v-if="credentialsComponent !== '' && componentIsLoaded" :credentials="credentials" @on-credentials-changed="$emit('onCredentialsChanged', $event)" @on-child-route-ready-changed="$emit('onChildRouteReadyChanged', $event)" @on-trigger-primary-click="$emit('onTriggerPrimaryClick')" /> {% endblock %} {% block swag_migration_wizard_page_credentials_no_form_found %} <template v-else> <div class="swag-migration-wizard-page-credentials__empty_state"> {% block swag_migration_wizard_page_credentials_no_form_found_content %} <p class="swag-migration-wizard__emptyStateDescription"> {{ $tc('swag-migration.wizard.pages.credentials.emptyState') }} </p> {% endblock %} </div> </template> {% endblock %} </div> {% endblock %}`,{Component:I}=Shopware;I.register("swag-migration-wizard-page-credentials",{template:Oi,emits:["onCredentialsChanged","onChildRouteReadyChanged","onTriggerPrimaryClick"],props:{credentialsComponent:{type:String,default:""},credentials:{type:Object,default(){return{}}}},metaInfo(){return{title:this.$createTitle()}},computed:{componentIsLoaded(){return I.getComponentRegistry().has(this.credentialsComponent)}}});const Fi=`{% block swag_migration_wizard_page_credentials_success %} <div class="swag-migration-wizard swag-migration-wizard-page-credentials-success"> {% block swag_migration_wizard_page_success_error_alert %} <mt-banner v-if="errorMessageSnippet !== ''" id="alert-error-message" class="swag-migration-wizard-page-credentials-success__alert" variant="attention"> {{ $tc(errorMessageSnippet) }} </mt-banner> {% endblock %} {% block swag_migration_wizard_page_credentials_success_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_credentials_success_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_credentials_success_bubble %} <div v-if="errorMessageSnippet === ''" class="swag-migration-wizard__bubble swag-migration-wizard__bubble--success"> <mt-icon class="swag-migration-wizard__success-icon" name="regular-thumbs-up" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_wizard_page_credentials_success_title %} <h3 class="swag-migration-wizard__information-header"> {{ $tc('swag-migration.wizard.pages.credentials.success.contentTitle') }} </h3> {% endblock %} {% block swag_migration_wizard_page_credentials_success_api_hint %} {{ $tc('swag-migration.wizard.pages.credentials.success.contentInformation') }} {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Bi}=Shopware;Bi.register("swag-migration-wizard-page-credentials-success",{template:Fi,props:{errorMessageSnippet:{type:String,default:"",required:!1}},metaInfo(){return{title:this.$createTitle()}}});const ji=`{% block swag_migration_wizard_page_credentials_error %} <div class="swag-migration-wizard swag-migration-wizard-page-credentials-error"> {% block swag_migration_wizard_page_credentials_error_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_credentials_error_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_credentials_success_bubble %} <div class="swag-migration-wizard__bubble swag-migration-wizard__bubble--warning"> <mt-icon class="swag-migration-wizard__warning-icon" name="regular-exclamation-triangle" size="36px" decorative /> </div> {% endblock %} {% block swag_migration_wizard_page_credentials_error_title %} <h3 class="swag-migration-wizard__information-header"> {{ $tc('swag-migration.wizard.pages.credentials.error.contentTitle') }} </h3> {% endblock %} {% block swag_migration_wizard_page_credentials_error_api_hint %} <template v-if="errorMessageSnippet !== ''"> <p class="swag-migration-wizard__description"> {{ $tc(errorMessageSnippet) }} </p> <mt-banner v-if="errorMessageHintSnippet" class="swag-migration-wizard__description-hint" :variant="errorMessageHintSnippetType" > {{ $tc(errorMessageHintSnippet) }} </mt-banner> </template> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Ui}=Shopware;Ui.register("swag-migration-wizard-page-credentials-error",{template:ji,props:{errorMessageSnippet:{type:String,default:"",required:!1},errorMessageHintSnippet:{type:String,default:null,required:!1},errorMessageHintType:{type:String,default:"info",required:!1,validValues:["info","warning","error","success","neutral"],validator(i){return["info","warning","error","success","neutral"].includes(i)}}},metaInfo(){return{title:this.$createTitle()}}});const Hi=`{% block swag_migration_history %} <mt-card class="swag-migration-history" :is-loading="isLoading" :large="true" position-identifier="swag-migration-history"> <template #grid> {% block swag_migration_history_grid %} <sw-data-grid v-if="migrationRuns.length > 0" identifier="swag-migration-history" :data-source="migrationRuns" :columns="migrationColumns" :show-selection="false" :show-settings="true" :allow-column-edit="true" :sort-by="sortBy" :sort-direction="sortDirection" @column-sort="onSortColumn"> {% block swag_migration_history_grid_column_status %} <template #column-step="{ item }"> <mt-icon v-if="item.step === 'finished'" class="swag-migration-history__status-icon swag-migration-history__status-icon--finished" name="regular-checkmark" size="16px" /> <mt-icon v-else-if="item.step === 'aborted'" class="swag-migration-history__status-icon swag-migration-history__status-icon--aborted" name="regular-times" size="16px" /> <mt-icon v-else-if="item.step === 'running'" class="swag-migration-history__status-icon swag-migration-history__status-icon--loading" name="regular-circle" size="16px" /> </template> {% endblock %} {% block swag_migration_history_grid_column_profile %} <template #column-connection.profile="{ item }"> {{ item.connection.profileName }} / {{ item.connection.gatewayName }} </template> {% endblock %} {% block swag_migration_history_grid_column_createdAt %} <template #column-createdAt="{ item }"> {{ dateFilter(item.createdAt, migrationDateOptions) }} </template> {% endblock %} {% block swag_migration_history_grid_column_sourceSystemName %} <template #column-environmentInformation.sourceSystemName="{ item }"> {{ item.environmentInformation.sourceSystemName }} {{ item.environmentInformation.sourceSystemVersion }} </template> {% endblock %} {% block swag_migration_history_grid_actions %} <template #actions="{ item }"> <sw-context-menu-item :router-link="{ name: 'swag.migration.index.history.detail', params:{ id:item.id } }"> {{ $tc('swag-migration.history.contextMenu.details') }} </sw-context-menu-item> <sw-context-menu-item @click="onContextDownloadLogFile(item.id)"> {{ $tc('swag-migration.history.contextMenu.downloadLogs') }} </sw-context-menu-item> <sw-context-menu-item variant="danger" :disabled="isMediaProcessing" @click="onContextClearRunClicked(item.id)"> {{ $tc('swag-migration.history.contextMenu.clearLogs') }} </sw-context-menu-item> </template> {% endblock %} {% block swag_migration_history_grid_pagination %} <template #pagination> <sw-pagination :page="page" :limit="limit" :total="total" :total-visible="7" @page-change="onPageChange" /> </template> {% endblock %} </sw-data-grid> {% endblock %} {% block swag_migration_history_no_data %} <div v-if="migrationRuns.length === 0" class="swag-migration-history__no-data"> <p class="swag-migration-history__no-data-label"> {{ $tc('swag-migration.history.noData') }} </p> </div> {% endblock %} {% block swag_migration_history_router_view %} <router-view /> {% endblock %} {% block swag_migration_history_log_download_form %} <form ref="downloadLogsOfRunForm" class="swag-migration-history-detail-errors__download-form" :action="logDownloadEndpoint" method="POST"> <input type="hidden" name="runUuid" :value="runIdForLogDownload"> </form> {% endblock %} {% block swag_migration_history_run_clear_confirm_modal %} <sw-modal v-if="showRunClearConfirmModal" class="swag-migration-history__run-clear-confirm-modal" :title="$tc('swag-migration.history.clearRunDialog.title')" :is-loading="runClearConfirmModalIsLoading" size="460px" @modal-close="showRunClearConfirmModal = false"> {% block swag_migration_history_run_clear_confirm_modal_content %} <p class="swag-migration-history__run-clear-confirm-modal-content"> {{ $tc('swag-migration.history.clearRunDialog.content') }} </p> {% endblock %} {% block swag_migration_history_run_clear_confirm_modal_content_hint %} <p class="swag-migration-history__run-clear-confirm-modal-content-hint"> {{ $tc('swag-migration.history.clearRunDialog.contentHint') }} </p> {% endblock %} {% block swag_migration_history_run_clear_confirm_modal_footer %} <template #modal-footer> {% block swag_migration_history_run_clear_confirm_modal_abort %} <mt-button size="small" variant="secondary" :disabled="runClearConfirmModalIsLoading" @click="showRunClearConfirmModal = false"> {{ $tc('global.default.cancel') }} </mt-button> {% endblock %} {% block swag_migration_history_run_clear_confirm_modal_confirm %} <mt-button size="small" variant="primary" :disabled="runClearConfirmModalIsLoading" @click="onClearRunConfirmed"> {{ $tc('global.default.delete') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> </mt-card> {% endblock %}`,{Component:Gi,Mixin:$}=Shopware,{Criteria:z}=Shopware.Data;Gi.register("swag-migration-history",{template:Hi,inject:{repositoryFactory:"repositoryFactory",migrationApiService:"migrationApiService"},mixins:[$.getByName("listing"),$.getByName("notification")],data(){return{isLoading:!1,migrationRuns:[],migrationDateOptions:{hour:"2-digit",minute:"2-digit",second:"2-digit"},sortBy:"createdAt",sortDirection:"DESC",oldParams:{},context:Shopware.Context.api,logDownloadEndpoint:"",runIdForLogDownload:"",runIdForRunClear:"",showRunClearConfirmModal:!1,runClearConfirmModalIsLoading:!1,isMediaProcessing:!0}},metaInfo(){return{title:this.$createTitle()}},computed:{migrationRunRepository(){return this.repositoryFactory.create("swag_migration_run")},migrationColumns(){return this.getMigrationColumns()},dateFilter(){return Shopware.Filter.getByName("date")}},created(){this.migrationApiService.isMediaProcessing().then(i=>{this.isMediaProcessing=i.data}),this.logDownloadEndpoint=`/api/_action/${this.migrationApiService.getApiBasePath()}/download-logs-of-run`},methods:{getMigrationColumns(){return[{property:"connection.name",dataIndex:"connection.name",label:this.$tc("swag-migration.history.connectionName"),primary:!0,allowResize:!0},{property:"environmentInformation.sourceSystemDomain",dataIndex:"environmentInformation.sourceSystemDomain",label:this.$tc("swag-migration.history.shopDomain"),visible:!1,allowResize:!0},{property:"environmentInformation.sourceSystemName",dataIndex:"environmentInformation.sourceSystemName",label:this.$tc("swag-migration.history.shopSystem"),visible:!1,allowResize:!0},{property:"connection.profile",dataIndex:"connection.profileName",label:this.$tc("swag-migration.history.profileAndGateway"),allowResize:!0},{property:"step",dataIndex:"step",label:this.$tc("swag-migration.history.status"),align:"center",allowResize:!0},{property:"createdAt",dataIndex:"createdAt",label:this.$tc("swag-migration.history.importDateTime"),align:"right",allowResize:!0}]},getList(){this.isLoading=!0;const i=this.normalizeListingParams(this.getMainListingParams());if(JSON.stringify(this.oldParams)===JSON.stringify(i))return this.isLoading=!1,Promise.resolve(this.migrationRuns);this.oldParams=i;const t=new z(i.page,i.limit);return t.addSorting(z.sort(i.sortBy,i.sortDirection,i.naturalSorting)),this.migrationRunRepository.search(t,this.context).then(e=>(this.total=e.total,this.migrationRuns=e,this.isLoading=!1,this.migrationRuns))},normalizeListingParams(i){return i.limit=parseInt(i.limit,10),i.page=parseInt(i.page,10),i},onContextDownloadLogFile(i){this.runIdForLogDownload=i,this.$nextTick(()=>{this.$refs.downloadLogsOfRunForm.submit()})},clearDataOfRun(i){return this.runClearConfirmModalIsLoading=!0,this.migrationApiService.clearDataOfRun(i).then(()=>{this.showRunClearConfirmModal=!1,this.runClearConfirmModalIsLoading=!1,this.$router.go()}).catch(()=>{this.createNotificationError({message:this.$t("swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message"),growl:!0})})},onContextClearRunClicked(i){this.runIdForRunClear=i,this.showRunClearConfirmModal=!0},onClearRunConfirmed(){this.clearDataOfRun(this.runIdForRunClear)}}});const qi=`{% block swag_migration_history_detail %} <div class="swag-migration-history-detail"> <sw-modal v-if="showModal" class="swag-migration-history-detail__modal" size="800px" :title="$tc('swag-migration.history.detailPage.title')" :is-loading="isLoading" @modal-close="onCloseModal"> {% block swag_migration_history_detail_modal_content %} <div v-if="isLoading" class="swag-migration-history-detail__loading-placeholder"> </div> <div v-if="!isLoading" class="swag-migration-history-detail__content"> {% block swag_migration_history_detail_header %} <div class="swag-migration-history-detail__header"> {% block swag_migration_history_detail_connectin_avatar %} <template v-if="profileIcon !== null && profileIcon !== ''"> <img class="swag-migration-shop-information__profile-avatar" :src="assetFilter(profileIcon)" alt="" size="80px"> </template> <template v-else> <img class="swag-migration-shop-information__profile-avatar" :src="assetFilter('/swagmigrationassistant/administration/static/img/migration-assistant-plugin.svg')" alt="" size="80px"> </template> {% endblock %} {% block swag_migration_history_detail_connection_info %} <div class="swag-migration-history-detail__connection-info"> {% block swag_migration_history_detail_shop_system %} <div class="swag-migration-history-detail__connection-name"> {{ connectionName }} </div> {% endblock %} {% block swag_migration_history_detail_shop_domain %} <div v-if="shopUrl !== ''" class="swag-migration-history-detail__shop-domain"> <span class="swag-migration-history-detail__shop-domain-prefix" :class="shopUrlPrefixClass"> <mt-icon v-if="sslActive" class="swag-migration-history-detail__shop-domain-prefix-icon" name="regular-lock" size="12px" /> <mt-icon v-else class="swag-migration-history-detail__shop-domain-prefix-icon" name="regular-lock-open-s" size="12px" /> {{ shopUrlPrefix }}</span>{{ shopUrl }} </div> {% endblock %} {% block swag_migration_history_detail_profile %} <div class="swag-migration-history-detail__profile"> {{ profileName }} / {{ gatewayName }} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_history_detail_run_info %} <div class="swag-migration-history-detail__run-info"> <div class="swag-migration-history-detail__run-timestamp-label"> {{ $tc('swag-migration.history.detailPage.timestamp') }} </div> <div class="swag-migration-history-detail__run-timestamp-value"> {{ dateFilter(migrationRun.createdAt, migrationDateOptions) }} </div> <div class="swag-migration-history-detail__run-status-label"> {{ $tc('swag-migration.history.detailPage.runStatus') }} </div> <div class="swag-migration-history-detail__run-status-value" :class="runStatusClasses"> {{ $tc(runStatusSnippet) }} </div> </div> {% endblock %} </div> {% endblock %} {% block swag_migration_history_detail_body %} <div class="swag-migration-history-detail__body"> {% block swag_migration_history_detail_body_tabs %} <sw-tabs ref="tabReference" position-identifier="swag-migration-history-detail-body-tabs" @new-item-active="newActiveTabItem" > {% block swag_migration_history_detail_body_tabs_data %} <sw-tabs-item ref="dataTabItem" name="data"> {{ $tc('swag-migration.history.detailPage.data') }} </sw-tabs-item> {% endblock %} {% block swag_migration_history_detail_body_tabs_errors %} <sw-tabs-item ref="errorsTabItem" name="errors"> {{ $tc('swag-migration.history.detailPage.errors') }} </sw-tabs-item> {% endblock %} </sw-tabs> {% endblock %} {% block swag_migration_history_detail_body_data %} <swag-migration-history-detail-data v-show="currentTab === 'data'" :migration-run="migrationRun" /> {% endblock %} {% block swag_migration_history_detail_body_errors %} <swag-migration-history-detail-errors v-show="currentTab === 'errors'" :migration-run="migrationRun" /> {% endblock %} </div> {% endblock %} </div> {% endblock %} {% block swag_migration_history_detail_footer %} <template #modal-footer> <mt-button size="small" variant="secondary" @click="onCloseModal"> {{ $tc('swag-migration.history.detailPage.close') }} </mt-button> </template> {% endblock %} </sw-modal> </div> {% endblock %}`,{Component:Vi}=Shopware,{Criteria:R}=Shopware.Data;Vi.register("swag-migration-history-detail",{template:qi,inject:{migrationApiService:"migrationApiService",repositoryFactory:"repositoryFactory"},data(){return{runId:"",migrationRun:{},showModal:!0,isLoading:!0,migrationDateOptions:{hour:"2-digit",minute:"2-digit",second:"2-digit"},currentTab:"data",context:Shopware.Context.api}},metaInfo(){return{title:this.$createTitle()}},computed:{migrationRunRepository(){return this.repositoryFactory.create("swag_migration_run")},shopFirstLetter(){return this.migrationRun.environmentInformation.sourceSystemName===void 0?"S":this.migrationRun.environmentInformation.sourceSystemName[0]},profileIcon(){return this.migrationRun.connection===null||this.migrationRun.connection.profile===void 0||this.migrationRun.connection.profile.icon===void 0?null:this.migrationRun.connection.profile.icon},connectionName(){return this.migrationRun.connection===null?"":this.migrationRun.connection.name},shopUrl(){return this.migrationRun.environmentInformation.sourceSystemDomain===void 0?"":this.migrationRun.environmentInformation.sourceSystemDomain.replace(/^\s*https?:\/\//,"")},shopUrlPrefix(){if(this.migrationRun.environmentInformation.sourceSystemDomain===void 0)return"";const i=this.migrationRun.environmentInformation.sourceSystemDomain.match(/^\s*https?:\/\//);return i===null?"":i[0]},sslActive(){return this.shopUrlPrefix==="https://"},shopUrlPrefixClass(){return this.sslActive?"swag-migration-shop-information__shop-domain-prefix--is-ssl":""},profileName(){return this.migrationRun.connection===null?"":this.migrationRun.connection.profileName},gatewayName(){return this.migrationRun.connection===null?"":this.migrationRun.connection.gatewayName},runStatusSnippet(){return this.migrationRun.step===null?"":`swag-migration.history.detailPage.status.${this.migrationRun.step}`},runStatusClasses(){return this.migrationRun.step===null?"":`swag-migration-history-detail__run-status-value--${this.migrationRun.step}`},assetFilter(){return Shopware.Filter.getByName("asset")},dateFilter(){return Shopware.Filter.getByName("date")}},created(){if(!this.$route.params.id)return this.isLoading=!1,this.onCloseModal(),Promise.resolve();this.runId=this.$route.params.id;const i=new R(1,1);return i.addFilter(R.equals("id",this.runId)),this.migrationRunRepository.search(i,this.context).then(t=>t.length<1?(this.isLoading=!1,this.onCloseModal(),Promise.resolve()):(this.migrationRun=t.first(),this.migrationApiService.getProfileInformation(this.migrationRun.connection.profileName,this.migrationRun.connection.gatewayName).then(e=>{this.migrationRun.connection.profile=e.profile,this.isLoading=!1,this.$nextTick(()=>{this.$refs.tabReference.setActiveItem(this.$refs.dataTabItem)})}))).catch(()=>{this.isLoading=!1,this.onCloseModal()})},methods:{onCloseModal(){this.showModal=!1,this.$nextTick(()=>{this.$router.go(-1)})},newActiveTabItem(i){this.currentTab=i.name}}});const Wi=`{% block swag_migration_history_detail_errors %} <div class="swag-migration-history-detail-errors"> <div v-if="!isLoading"> {% block swag_migration_history_detail_errors_grid %} <sw-data-grid v-if="migrationErrors.length > 0" identifier="swag-migration-history-detail-errors" :data-source="migrationErrors" :columns="columns" :show-selection="false" :show-settings="false" :allow-column-edit="false" :show-actions="false" :sort-by="sortBy" :sort-direction="sortDirection" @column-sort="onSortColumn"> {% block swag_migration_history_detail_errors_grid_code%} <template #column-title="{ item }"> {{ item.title }} </template> {% endblock %} {% block swag_migration_history_detail_errors_grid_level %} <template #column-level="{ item }"> {{ item.level }} </template> {% endblock %} {% block swag_migration_history_detail_errors_grid_count %} <template #column-count="{ item }"> {{ item.count }} </template> {% endblock %} {% block swag_migration_history_detail_errors_grid_pagination %} <template #pagination> <sw-pagination :page="page" :limit="limit" :total="total" :steps="[5,10]" :total-visible="7" @page-change="onPageChange" /> </template> {% endblock %} </sw-data-grid> {% endblock %} {% block swag_migration_history_detail_errors_noError %} <p v-if="migrationErrors.length === 0" class="swag-migration-history-detail-errors__no-error"> {{ $tc('swag-migration.history.detailPage.noErrorsOccurred') }} </p> {% endblock %} {% block swag_migration_history_detail_errors_download_form %} <form ref="downloadForm" class="swag-migration-history-detail-errors__download-form" :action="downloadUrl" method="POST"> <input type="hidden" name="runUuid" :value="migrationRun.id"> </form> {% endblock %} {% block swag_migration_history_detail_errors_description %} <p class="swag-migration-history-detail-errors__description"> {{ $tc('swag-migration.history.detailPage.logDescription') }} <a class="link" href="#" @click.prevent="submitDownload"> {{ $tc('swag-migration.history.detailPage.logDownload') }} </a> </p> {% endblock %} </div> {% block swag_migration_history_detail_errors_noError__loader %} <div v-if="isLoading" class="swag-migration-history-detail-errors__loading-placeholder"></div> <mt-loader v-if="isLoading" /> {% endblock %} </div> {% endblock %}`,{Component:Ki,Mixin:Xi}=Shopware;Ki.register("swag-migration-history-detail-errors",{template:Wi,inject:{migrationApiService:"migrationApiService"},mixins:[Xi.getByName("listing")],props:{migrationRun:{type:Object,required:!0}},data(){return{isLoading:!0,allMigrationErrors:null,migrationErrors:[],sortBy:"level",sortDirection:"DESC",disableRouteParams:!0,limit:10,downloadUrl:""}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"title",dataIndex:"title",label:this.$tc("swag-migration.history.detailPage.errorCode"),primary:!0,allowResize:!0,sortable:!0},{property:"level",dataIndex:"level",label:this.$tc("swag-migration.history.detailPage.errorLevel"),primary:!0,allowResize:!0,sortable:!0},{property:"count",dataIndex:"count",label:this.$tc("swag-migration.history.detailPage.errorCount"),primary:!0,allowResize:!0,sortable:!0}]}},methods:{async getList(){this.isLoading=!0;const i=this.getMainListingParams();this.allMigrationErrors===null&&await this.loadAllMigrationErrors(),this.applySorting(i);const t=(i.page-1)*this.limit,e=Math.min((i.page-1)*this.limit+this.limit,this.allMigrationErrors.length);this.migrationErrors=[];for(let a=t;a<e;a+=1)this.migrationErrors.push(this.allMigrationErrors[a]);return this.isLoading=!1,this.migrationErrors},loadAllMigrationErrors(){return this.migrationApiService.getGroupedLogsOfRun(this.migrationRun.id).then(i=>(this.total=i.total,this.allMigrationErrors=i.items,this.allMigrationErrors.forEach(t=>{t.title=this.$tc(this.getErrorTitleSnippet(t),{entity:t.entity},0)}),this.downloadUrl=i.downloadUrl,this.allMigrationErrors))},applySorting(i){this.allMigrationErrors.sort((t,e)=>i.sortDirection==="ASC"?t[i.sortBy]<e[i.sortBy]?-1:1:t[i.sortBy]>e[i.sortBy]?-1:1)},getErrorTitleSnippet(i){const t=i.titleSnippet;return this.$te(t)?t:"swag-migration.index.error.unknownError"},submitDownload(){this.$refs.downloadForm.submit()}}});const Yi=`{% block swag_migration_history_detail_data %} <div class="swag-migration-history-detail-data"> <div v-if="!isLoading"> {% block swag_migration_history_detail_data_grid %} <sw-data-grid v-if="migrationData.length > 0" identifier="swag-migration-history-detail-data" :data-source="migrationData" :columns="columns" :show-selection="false" :show-settings="false" :allow-column-edit="false" :show-actions="false" :sort-by="sortBy" :sort-direction="sortDirection" @column-sort="onSortColumn"> {% block swag_migration_history_detail_data_grid_name %} <template #column-name="{ item }"> {{ item.name }} </template> {% endblock %} {% block swag_migration_history_detail_data_grid_count %} <template #column-count="{ item }"> {{ item.total }} </template> {% endblock %} {% block swag_migration_history_detail_data_grid_pagination %} <template #pagination> <sw-pagination :page="page" :limit="limit" :total="total" :steps="[5,10]" :total-visible="7" @page-change="onPageChange" /> </template> {% endblock %} </sw-data-grid> {% endblock %} {% block swag_migration_history_detail_data_noData %} <p v-if="migrationData.length === 0" class="swag-migration-history-detail-data__no-data"> {{ $tc('swag-migration.history.detailPage.noProgressData') }} </p> {% endblock %} </div> {% block swag_migration_history_detail_data_noError__loader %} <div v-if="isLoading" class="swag-migration-history-detail-data__loading-placeholder"></div> <mt-loader v-if="isLoading" /> {% endblock %} </div> {% endblock %}`,{Component:Ji,Mixin:Qi}=Shopware;Ji.register("swag-migration-history-detail-data",{template:Yi,mixins:[Qi.getByName("listing")],props:{migrationRun:{type:Object,required:!0}},data(){return{isLoading:!0,allMigrationData:[],migrationData:[],sortBy:"createdAt",sortDirection:"DESC",disableRouteParams:!0,limit:10}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"name",label:this.$tc("swag-migration.history.detailPage.dataName"),primary:!0,allowResize:!0,sortable:!1},{property:"count",label:this.$tc("swag-migration.history.detailPage.dataCount"),allowResize:!0,sortable:!1}]},entityGroups(){return this.migrationRun.progress?this.migrationRun.progress.dataSets.map(i=>{let t=i.entityName;return this.$te(`swag-migration.index.selectDataCard.entities.${t}`)&&(t=this.$tc(`swag-migration.index.selectDataCard.entities.${t}`)),{id:i.entityName,name:t,total:i.total}}):[]}},methods:{getList(){this.isLoading=!0,this.total=this.entityGroups.length;const i=(this.page-1)*this.limit,t=Math.min(i+this.limit,this.total);this.migrationData=[];for(let e=i;e<t;e+=1)this.migrationData.push(this.entityGroups[e]);return this.isLoading=!1,this.items}}});const Zi=`{% block swag_migration_base_smart_bar_actions %} {# #} <template #smart-bar-actions> {% block swag_migration_index_smart_bar_abort_button %} <mt-button v-if="abortButtonVisible" variant="secondary" :disabled="abortButtonDisabled" @click="onAbortButtonClick"> {{ $tc('swag-migration.index.abortButton') }} </mt-button> {% endblock %} {% block swag_migration_index_smart_bar_back_to_overview_button %} <mt-button v-if="backToOverviewButtonVisible" variant="primary" :disabled="backToOverviewButtonDisabled" @click="onContinueButtonClick"> {{ $tc('swag-migration.index.backToOverviewButton') }} </mt-button> {% endblock %} </template> {% endblock %} {% block swag_migration_base_content %} {# #} <template #content> <sw-card-view v-if="!isLoading && !storesInitializing" class="swag-migration-process-screen"> {% block swag_migration_index_main_page_flow_chart %} <sw-step-display v-if="displayFlowChart" class="swag-migration-process-screen__step-display" :item-index="flowChartItemIndex" :item-variant="flowChartItemVariant" :initial-item-variants="flowChartInitialItemVariants"> <sw-step-item> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.fetchData') }} </sw-step-item> <sw-step-item> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.writeData') }} </sw-step-item> <sw-step-item> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.processMedia') }} </sw-step-item> <sw-step-item> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.cleanup') }} </sw-step-item> <sw-step-item> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.indexing') }} </sw-step-item> <sw-step-item disabled-icon="regular-checkmark-xs"> {{ $tc('swag-migration.index.loadingScreenCard.flowChart.finish') }} </sw-step-item> </sw-step-display> {% endblock %} {% block swag_migration_index_main_page_card_loadingScreen %} <swag-migration-loading-screen v-if="componentIndex === UI_COMPONENT_INDEX.LOADING_SCREEN" :step="step" :progress="progress" :total="total" /> {% endblock %} {% block swag_migration_index_main_page_card_loadingScreen_success %} <swag-migration-result-screen v-if="componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS" /> {% endblock %} {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog %} <sw-modal v-if="showAbortMigrationConfirmDialog" class="swag-migration-index-modal-abort-migration-confirm-dialog" :title="$tc('swag-migration.index.confirmAbortDialog.title')" variant="small" @modal-close="onCloseAbortMigrationConfirmDialog"> {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message %} <p class="swag-migration-index-modal-abort-migration-confirm-dialog-content"> {{ $tc('swag-migration.index.confirmAbortDialog.content') }} </p> {% endblock %} {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message_hint %} <p class="swag-migration-index-modal-abort-migration-confirm-dialog-hint"> {{ $tc('swag-migration.index.confirmAbortDialog.hint') }} </p> {% endblock %} {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer %} <template #modal-footer> {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_cancelAction %} <mt-button size="small" variant="secondary" @click="onCloseAbortMigrationConfirmDialog"> {{ $tc('global.default.cancel') }} </mt-button> {% endblock %} {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_confirmAction %} <mt-button variant="primary" size="small" @click="onAbort"> {{ $tc('swag-migration.index.confirmAbortDialog.confirm') }} </mt-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </sw-card-view> <mt-loader v-if="isLoading || storesInitializing" /> </template> {% endblock %}`,{Component:it,Store:c}=Shopware,{mapState:tt}=Shopware.Component.getComponentHelper(),et=1e3,M=Object.freeze({[n.IDLE]:0,[n.FETCHING]:0,[n.WRITING]:1,[n.MEDIA_PROCESSING]:2,[n.ABORTING]:3,[n.CLEANUP]:3,[n.INDEXING]:4,[n.WAITING_FOR_APPROVE]:5}),g=Object.freeze({LOADING_SCREEN:0,RESULT_SUCCESS:1});it.extend("swag-migration-process-screen","swag-migration-base",{template:Zi,inject:{migrationApiService:"migrationApiService"},mixins:["notification"],metaInfo(){return{title:this.progressPercentage!==null?`${this.progressPercentage}% ${this.$createTitle()}`:this.$createTitle()}},data(){return{displayFlowChart:!0,flowChartItemIndex:0,flowChartItemVariant:"info",flowChartInitialItemVariants:[],UI_COMPONENT_INDEX:g,componentIndex:g.LOADING_SCREEN,showAbortMigrationConfirmDialog:!1,pollingIntervalId:null,step:n.FETCHING,progress:0,total:0}},computed:{...tt(()=>c.get("swagMigration"),["isLoading","dataSelectionIds"]),abortButtonVisible(){return!this.isLoading&&!this.componentIndexIsResult},backToOverviewButtonVisible(){return!this.isLoading&&this.componentIndex===g.RESULT_SUCCESS},backToOverviewButtonDisabled(){return this.isLoading},abortButtonDisabled(){return this.isLoading||this.step===n.ABORTING},componentIndexIsResult(){return this.componentIndex===g.RESULT_SUCCESS},progressPercentage(){return this.total?Math.min(Math.round(this.progress/this.total*100),100):null}},unmounted(){this.unmountedComponent()},methods:{async createdComponent(){if(await this.initState(),c.get("swagMigration").setIsLoading(!0),this.connectionId===null){this.$router.push({name:"swag.migration.index.main"});return}let i=!1;try{const t=await this.migrationApiService.getState();(t==null?void 0:t.step)!==n.IDLE&&(i=!0,this.visualizeMigrationState(t))}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.getState")})}if(!i){await this.startMigration();try{const t=await this.migrationApiService.getState();this.visualizeMigrationState(t)}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.getState")})}}this.registerPolling(),c.get("swagMigration").setIsLoading(!1)},async unmountedComponent(){this.unregisterPolling(),this.total=0},unregisterPolling(){this.pollingIntervalId&&clearInterval(this.pollingIntervalId)},registerPolling(){this.unregisterPolling(),this.pollingIntervalId=setInterval(this.migrationStatePoller,et)},visualizeMigrationState(i){if(i&&(this.step!==i.step&&(this.progress=0),this.step=i.step,this.$nextTick(()=>{this.progress=i.progress,this.total=i.total}),i.step===n.FETCHING||i.step===n.WRITING||i.step===n.MEDIA_PROCESSING||i.step===n.ABORTING||i.step===n.CLEANUP||i.step===n.INDEXING?(this.componentIndex=g.LOADING_SCREEN,this.flowChartItemIndex=M[i.step]):(i.step===n.WAITING_FOR_APPROVE||i.step===n.IDLE)&&(this.componentIndex=g.RESULT_SUCCESS,this.flowChartItemIndex=M[i.step],this.unregisterPolling()),i.step!==n.WAITING_FOR_APPROVE&&i.step!==n.IDLE?this.flowChartItemVariant="info":this.flowChartItemVariant="success",this.flowChartInitialItemVariants.length<this.flowChartItemIndex))for(;this.flowChartInitialItemVariants.length<this.flowChartItemIndex;)this.flowChartInitialItemVariants.push("success")},async startMigration(){try{await this.migrationApiService.startMigration(this.dataSelectionIds)}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.startMigration")}),this.$router.push({name:"swag.migration.index.main",query:{forceFullStateReload:!0}})}},async migrationStatePoller(){try{const i=await this.migrationApiService.getState();i&&i.step===n.IDLE&&(this.unregisterPolling(),this.$router.push({name:"swag.migration.index.main",query:{forceFullStateReload:!0}})),this.visualizeMigrationState(i)}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.getState")})}return Promise.resolve()},async approveFinishedMigration(){try{c.get("swagMigration").setIsLoading(!0),await this.migrationApiService.approveFinishedMigration(),this.$router.push({name:"swag.migration.index.main",query:{forceFullStateReload:!0}})}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.approveFinishedMigration")}),this.$router.push({name:"swag.migration.index.main",query:{forceFullStateReload:!0}})}finally{c.get("swagMigration").setIsLoading(!1)}},async onAbortButtonClick(){this.showAbortMigrationConfirmDialog=!0},onCloseAbortMigrationConfirmDialog(){this.showAbortMigrationConfirmDialog=!1},async onAbort(){try{this.showAbortMigrationConfirmDialog=!1,c.get("swagMigration").setIsLoading(!0),await this.migrationApiService.abortMigration();const i=await this.migrationApiService.getState();this.visualizeMigrationState(i)}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("swag-migration.api-error.abortMigration")})}finally{c.get("swagMigration").setIsLoading(!1)}},onContinueButtonClick(){return this.componentIndex===g.RESULT_SUCCESS?this.approveFinishedMigration():Promise.resolve()}}});const at=`{% block swag_migration_data_selector %} <div class="swag-migration-data-selector"> {% block swag_migration_data_selector_warnings %} <div class="swag-migration-data-selector__warnings"> <mt-banner v-for="warning in displayWarnings" :key="warning.snippetKey" class="swag-migration-data-selector__warning" variant="attention"> {{ $tc(warning.snippetKey, warning.snippetArguments, warning.pluralizationCount) }} </mt-banner> </div> {% endblock %} {% block swag_migration_index_main_page_card_confirm_warning %} <swag-migration-confirm-warning class="swag-migration-process-screen__confirm-warning" /> {% endblock %} <mt-card v-if="dataSelectionTableData.length > 0" :title="$tc('swag-migration.index.selectDataCard.cardTitle')" position-identifier="swag-migration-data-selector" > {% block swag_migration_data_selector_grid %} <template #grid> <swag-migration-grid-extended ref="tableDataGrid" :items="dataSelectionTableData" disabled-attribute="requiredSelection" table @sw-grid-select-item="onGridSelectItem" @sw-grid-select-all="onGridSelectItem" @vue:mounted="tableDataGridMounted" > <template #columns="{ item }"> {% block swag_migration_data_selector_grid_column_data %} <sw-grid-column flex="1fr" :label="$tc('swag-migration.index.selectDataCard.headers.name')"> {{ $tc(item.snippet) }} </sw-grid-column> <sw-grid-column flex="1fr" :label="$tc('swag-migration.index.selectDataCard.headers.dataType')"> {{ $tc('swag-migration.index.selectDataCard.dataTypes.' + item.dataType) }} </sw-grid-column> <sw-grid-column flex="1fr" :label="$tc('swag-migration.index.selectDataCard.headers.total')" align="right"> {{ item.total }} <sw-help-text v-if="showHelptext(item.entityTotals)" class="swag-migration-data-selector__help-text" :text="getHelptext(item)" /> <div v-else class="swag-migration-data-selector__help-text-placeholder"> </div> </sw-grid-column> {% endblock %} </template> </swag-migration-grid-extended> </template> {% endblock %} </mt-card> <mt-card v-else class="swag-migration-data-selector" position-identifier="swag-migration-data-selector-no-data"> {% block swag_migration_data_selector_no_data %} <div class="swag-migration-index-data-selector__no-data"> <p class="swag-migration-index-data-selector__no-data-label"> {{ $tc('swag-migration.index.selectDataCard.noData') }} </p> </div> {% endblock %} </mt-card> <swag-migration-premapping /> </div> {% endblock %}`,{Component:nt,Store:L}=Shopware,{mapState:ot}=Shopware.Component.getComponentHelper();nt.register("swag-migration-data-selector",{template:at,inject:{migrationApiService:"migrationApiService"},computed:{...ot(()=>L.get("swagMigration"),["environmentInformation","dataSelectionTableData","dataSelectionIds"]),displayWarnings(){return this.environmentInformation.displayWarnings}},methods:{tableDataGridMounted(){this.dataSelectionIds.forEach(i=>{var t;(t=this.$refs.tableDataGrid)==null||t.selectItem(!0,{id:i})})},onGridSelectItem(i){const t=Object.keys(i);this.dataSelectionTableData.forEach(e=>{e.requiredSelection===!0&&(t.includes(e.id)||(t.push(e.id),this.$nextTick(()=>{this.$refs.tableDataGrid.selectItem(!0,e)})))}),L.get("swagMigration").setDataSelectionIds(t)},showHelptext(i){return i!==void 0&&Object.keys(i).length>1},getHelptext(i){if(i.entityTotals===void 0||Object.keys(i.entityTotals).length===0)return"";let t="";return Object.keys(i.entityTotals).forEach(e=>{t+=`${this.$tc(i.entityNames[e])}: ${i.entityTotals[e]}</br>`}),t}}});const rt='{% block sw_dashboard_index_content_intro_card %} {% parent %} {% block swag_migration_dashboard_card %} {% block sw_dashboard_index_content_migration_card %} <swag-migration-dashboard-card v-if="acl.isAdmin()" /> {% endblock %} {% endblock %} {% endblock %}',{Component:st}=Shopware,{Criteria:lt}=Shopware.Data;st.override("sw-dashboard-index",{template:rt,inject:["repositoryFactory","acl"],data(){return{context:Shopware.Context.api,runExists:!1,loading:!0,run:{}}},computed:{migrationRunRepository(){return this.repositoryFactory.create("swag_migration_run")}},created(){this.createdComponent()},methods:{createdComponent(){return this.$super("createdComponent"),this.acl.isAdmin()?this.migrationRunRepository.search(new lt,this.context).then(i=>{this.runExists=i.length>0,this.runExists&&(this.run=i[0]),this.loading=!1}):new Promise(i=>{i()})}}});const ct=`<div class="swag-migration-wizard swag-migration-wizard-page-credentials"> {% block swag_migration_wizard_page_credentials_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_credentials_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_credentials_api_hint %} <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.credentials.shopware55.api.contentInformation') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_credentials_credentials %} <div class="swag-migration-wizard__form"> {% block swag_migration_wizard_page_credentials_apikey_field %} <mt-text-field v-model:model-value="inputCredentials.apiKey" v-autofocus name="sw-field--apiKey" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyPlaceholder')" :help-text="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyTooltip')" :error="apiKeyError"> {% block swag_migration_wizard_page_credentials_apikey_icon %} <template #suffix> <mt-icon name="regular-key" /> </template> {% endblock %} </mt-text-field> {% endblock %} {% block swag_migration_wizard_page_credentials_apiuser_field %} <mt-text-field v-model:model-value="inputCredentials.apiUser" name="sw-field--apiUser" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserPlaceholder')" :help-text="$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserTooltip')" validation="required"> {% block swag_migration_wizard_page_credentials_apiuser_icon %} <template #suffix> <mt-icon name="regular-user" /> </template> {% endblock %} </mt-text-field> {% endblock %} {% block swag_migration_wizard_page_credentials_endpoint_field %} <mt-text-field v-model:model-value="inputCredentials.endpoint" :validation="inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointPlaceholder')" :switch-label="$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointSSLLabel')" /> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div>`,{Component:gt}=Shopware,dt=Shopware.Classes.ShopwareError,mt="SWAG_MIGRATION_INVALID_API_KEY";gt.register("swag-migration-profile-shopware-api-credential-form",{template:ct,emits:["onChildRouteReadyChanged","onCredentialsChanged"],props:{credentials:{type:Object,default(){return{}}}},data(){return{inputCredentials:{endpoint:"",apiUser:"",apiKey:""},apiKeyErrorCode:""}},computed:{apiKeyLength(){return this.inputCredentials.apiKey===null?0:this.inputCredentials.apiKey.length},apiKeyError(){return this.apiKeyErrorCode===""?null:new dt({code:this.apiKeyErrorCode,meta:{parameters:{length:this.apiKeyLength}}})}},watch:{credentials:{immediate:!0,handler(i){if(i===null||Object.keys(i).length<1){this.emitCredentials(this.inputCredentials);return}this.inputCredentials=i,this.emitOnChildRouteReadyChanged(this.areCredentialsValid(this.inputCredentials))}},inputCredentials:{deep:!0,handler(i){this.emitCredentials(i)}}},methods:{areCredentialsValid(i){return this.apiKeyValid(i.apiKey)&&this.validateInput(i.endpoint)&&this.validateInput(i.apiUser)&&i.endpoint!=="http://"&&i.endpoint!=="https://"},validateInput(i){return i!==null&&i!==""},apiKeyValid(i){return i===null||i.length<40||i.length>40?(this.apiKeyErrorCode=mt,!1):(this.apiKeyErrorCode="",!0)},emitOnChildRouteReadyChanged(i){this.$emit("onChildRouteReadyChanged",i)},emitCredentials(i){this.$emit("onCredentialsChanged",i),this.emitOnChildRouteReadyChanged(this.areCredentialsValid(i))}}});const pt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),_t=`{% block swag_migration_wizard_page_plugin_information %} <div class="swag-migration-wizard swag-migration-wizard-page-plugin-information"> {% block swag_migration_wizard_page_plugin_information_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_plugin_information_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_plugin_information_svg %} <img class="swag-migration-wizard__plugin" :src="assetFilter('/swagmigrationassistant/administration/static/img/wizard-shopware55-api-plugin-information.svg')" alt=""> {% endblock %} {% block swag_migration_wizard_page_plugin_information_title %} <h3 class="information__header"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentTitle') }} </h3> {% endblock %} {% block swag_migration_wizard_page_plugin_information_api_hint %} <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentInformation') }} </p> {% endblock %} {% block swag_migration_wizard_page_plugin_information_plugin_link %} <div class="swag-migration-wizard__link"> <a class="link" target="_blank" :href="storeLink"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.pluginLink') }} </a> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:ht}=Shopware;ht.register("swag-migration-profile-shopware-api-page-information",{template:_t,computed:{assetFilter(){return Shopware.Filter.getByName("asset")},storeLink(){return`https://store.shopware.com/${this.storeLinkISO}/swag226607479310f/migration-connector.html`},storeLinkISO(){const i=this.locale.split("-")[0];return["en","de"].includes(i)?i:"en"},locale(){return Shopware.Store.get("session").currentLocale??""}}});const wt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),ut=`<div class="swag-migration-wizard swag-migration-wizard-page-credentials"> {% block swag_migration_wizard_page_credentials_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_credentials_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_credentials_local_hint %} {{ $tc('swag-migration.wizard.pages.credentials.shopware55.local.contentInformation') }} {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_credentials_credentials %} <div class="swag-migration-wizard__form"> {% block swag_migration_wizard_page_credentials_local_db_host_port_group %} <sw-container columns="1fr 80px" gap="16px"> {% block swag_migration_wizard_page_credentials_local_dbhost_field %} <mt-text-field v-model:model-value="inputCredentials.dbHost" v-autofocus name="sw-field--dbHost" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostPlaceholder')" /> {% endblock %} {% block swag_migration_wizard_page_credentials_local_dbport_field %} <mt-text-field v-model:model-value="inputCredentials.dbPort" name="sw-field--dbPort" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPortLabel')" /> {% endblock %} </sw-container> {% endblock %} {% block swag_migration_wizard_page_credentials_local_dbuser_field %} <mt-text-field v-model:model-value="inputCredentials.dbUser" name="sw-field--dbUser" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserPlaceholder')" /> {% endblock %} {% block swag_migration_wizard_page_credentials_local_dbpassword_field %} <mt-password-field v-model:model-value="inputCredentials.dbPassword" name="sw-field--dbPassword" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordPlaceholder')" /> {% endblock %} {% block swag_migration_wizard_page_credentials_local_dbname_field %} <mt-text-field v-model:model-value="inputCredentials.dbName" name="sw-field--dbName" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNameLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNamePlaceholder')" /> {% endblock %} {% block swag_migration_wizard_page_credentials_local_installationroot_field %} <mt-text-field v-model:model-value="inputCredentials.installationRoot" name="sw-field--installationRoot" :label="$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRoot')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRootPlaceholder')" /> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div>`,{Component:ft}=Shopware;ft.register("swag-migration-profile-shopware-local-credential-form",{template:ut,emits:["onChildRouteReadyChanged","onCredentialsChanged"],props:{credentials:{type:Object,default(){return{}}}},data(){return{inputCredentials:{dbHost:"",dbPort:"3306",dbUser:"",dbPassword:"",dbName:"",installationRoot:""}}},watch:{credentials:{immediate:!0,handler(i){if(i===null||Object.keys(i).length<1){this.emitCredentials(this.inputCredentials);return}this.inputCredentials=i,this.emitOnChildRouteReadyChanged(this.areCredentialsValid(this.inputCredentials))}},inputCredentials:{deep:!0,handler(i){this.emitCredentials(i)}}},methods:{areCredentialsValid(i){return i.dbHost!==""&&i.dbPort!==""&&i.dbName!==""&&i.dbUser!==""&&i.dbPassword!==""&&i.installationRoot!==""},emitOnChildRouteReadyChanged(i){this.$emit("onChildRouteReadyChanged",i)},emitCredentials(i){this.$emit("onCredentialsChanged",i),this.emitOnChildRouteReadyChanged(this.areCredentialsValid(i))}}});const bt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:vt}=Shopware;vt.extend("swag-migration-profile-shopware54-api-credential-form","swag-migration-profile-shopware-api-credential-form",{});const Ct=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:kt}=Shopware;kt.extend("swag-migration-profile-shopware54-api-page-information","swag-migration-profile-shopware-api-page-information",{});const yt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:St}=Shopware;St.extend("swag-migration-profile-shopware54-local-credential-form","swag-migration-profile-shopware-local-credential-form",{});const xt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:It}=Shopware;It.extend("swag-migration-profile-shopware55-api-credential-form","swag-migration-profile-shopware-api-credential-form",{});const $t=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:zt}=Shopware;zt.extend("swag-migration-profile-shopware55-api-page-information","swag-migration-profile-shopware-api-page-information",{});const Rt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Mt}=Shopware;Mt.extend("swag-migration-profile-shopware55-local-credential-form","swag-migration-profile-shopware-local-credential-form",{});const Lt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Pt}=Shopware;Pt.extend("swag-migration-profile-shopware56-api-credential-form","swag-migration-profile-shopware-api-credential-form",{});const Dt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Et}=Shopware;Et.extend("swag-migration-profile-shopware56-api-page-information","swag-migration-profile-shopware-api-page-information",{});const Nt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Tt}=Shopware;Tt.extend("swag-migration-profile-shopware56-local-credential-form","swag-migration-profile-shopware-local-credential-form",{});const At=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Ot}=Shopware;Ot.extend("swag-migration-profile-shopware57-api-credential-form","swag-migration-profile-shopware-api-credential-form",{});const Ft=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Bt}=Shopware;Bt.extend("swag-migration-profile-shopware57-api-page-information","swag-migration-profile-shopware-api-page-information",{});const jt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),{Component:Ut}=Shopware;Ut.extend("swag-migration-profile-shopware57-local-credential-form","swag-migration-profile-shopware-local-credential-form",{});const Ht=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Gt=`<div class="swag-migration-wizard swag-migration-wizard-page-credentials"> {% block swag_migration_wizard_page_credentials_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_credentials_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_credentials_api_hint %} <p class="swag-migration-wizard__description"> {{ $tc('swag-migration.wizard.pages.credentials.shopware6.api.contentInformation') }} </p> {% endblock %} </div> {% endblock %} {% block swag_migration_wizard_page_credentials_credentials %} <div class="swag-migration-wizard__form"> {% block swag_migration_wizard_page_credentials_apiuser_field %} <mt-text-field v-model:model-value="inputCredentials.apiUser" v-autofocus name="sw-field--apiUser" :label="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserPlaceholder')" :help-text="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserTooltip')" validation="required" required> {% block swag_migration_wizard_page_credentials_apiuser_icon %} <template #suffix> <mt-icon name="regular-user" /> </template> {% endblock %} </mt-text-field> {% endblock %} {% block swag_migration_wizard_page_credentials_apiPassword_field %} <mt-password-field v-model:model-value="inputCredentials.apiPassword" name="sw-field--apiPassword" :label="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordPlaceholder')" :help-text="$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordTooltip')" validation="required" required /> {% endblock %} {% block swag_migration_wizard_page_credentials_endpoint_field %} <mt-url-field v-model:model-value="inputCredentials.endpoint" :validation="inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'" :label="$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointLabel')" :placeholder="$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointPlaceholder')" :switch-label="$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointSSLLabel')" required /> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div>`,{Component:qt}=Shopware;qt.register("swag-migration-profile-shopware6major-api-credential-form",{template:Gt,emits:["onChildRouteReadyChanged","onCredentialsChanged"],props:{credentials:{type:Object,default(){return{}}}},data(){return{inputCredentials:{endpoint:"",apiUser:"",apiPassword:""}}},computed:{apiPasswordLength(){return this.inputCredentials.apiPassword===null?0:this.inputCredentials.apiPassword.length}},watch:{credentials:{immediate:!0,handler(i){if(i===null||Object.keys(i).length<1){this.emitCredentials(this.inputCredentials);return}this.inputCredentials=i,this.emitOnChildRouteReadyChanged(this.areCredentialsValid(this.inputCredentials))}},inputCredentials:{deep:!0,handler(i){delete i.bearer_token,this.emitCredentials(i)}}},methods:{areCredentialsValid(i){return this.apiPasswordValid(i.apiPassword)&&this.validateInput(i.endpoint)&&this.validateInput(i.apiUser)&&i.endpoint!=="http://"&&i.endpoint!=="https://"},validateInput(i){return i!==null&&i!==""},apiPasswordValid(i){return i!==null&&i.length>=1},emitOnChildRouteReadyChanged(i){this.$emit("onChildRouteReadyChanged",i)},emitCredentials(i){this.$emit("onCredentialsChanged",i),this.emitOnChildRouteReadyChanged(this.areCredentialsValid(i))}}});const Vt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Wt=`{% block swag_migration_wizard_page_plugin_information_shopware6 %} <div class="swag-migration-wizard swag-migration-wizard-page-plugin-information swag-migration-profile-shopware6-api-page-information"> {% block swag_migration_wizard_page_plugin_information_shopware6_content %} <div class="swag-migration-wizard__content"> {% block swag_migration_wizard_page_plugin_information_shopware6_information %} <div class="swag-migration-wizard__content-information"> {% block swag_migration_wizard_page_plugin_information_shopware6_icon %} <div class="swag-migration-profile-shopware6-api-page-information__icon sw-settings-item"> <div class="sw-settings-item__icon background--enabled"> <mt-icon name="regular-cog" /> </div> </div> {% endblock %} {% block swag_migration_wizard_page_plugin_information_shopware6_title %} <h3 class="information__header"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.contentTitle') }} </h3> {% endblock %} {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint %} {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_plugin %} <div class="swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card"> <h4 class="information__header"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.title') }} </h4> <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.description') }}</p> <div class="swag-migration-wizard__link"> <a class="link" target="_blank" :href="$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.link')"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.linkText') }} </a> </div> </div> {% endblock %} {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_integration %} <div class="swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card"> <h4 class="information__header"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.title') }} </h4> <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.description') }}</p> <div class="swag-migration-wizard__link"> <a class="link" target="_blank" :href="$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.link')"> {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.linkText') }} </a> </div> </div> {% endblock %} {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:Kt}=Shopware;Kt.register("swag-migration-profile-shopware6major-api-page-information",{template:Wt});const Xt=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Yt=Object.assign({"./shopware/api/swag-migration-profile-shopware-api-credential-form/index.js":pt,"./shopware/api/swag-migration-profile-shopware-api-page-information/index.js":wt,"./shopware/local/swag-migration-profile-shopware-local-credential-form/index.js":bt,"./shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js":Ct,"./shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js":yt,"./shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js":xt,"./shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js":$t,"./shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js":Rt,"./shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js":Lt,"./shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js":Dt,"./shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js":Nt,"./shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js":At,"./shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js":Ft,"./shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js":jt,"./shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js":Ht,"./shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js":Vt,"./shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js":Xt});Object.values(Yt);const{Criteria:Jt}=Shopware.Data,P=Shopware.Service("migrationApiService"),Qt=Shopware.Service("repositoryFactory"),Zt=Qt.create("swag_migration_general_setting"),ie={namespaced:!0,state:()=>({connectionId:null,environmentInformation:{},lastConnectionCheck:null,isLoading:!1,dataSelectionTableData:[],dataSelectionIds:[],premapping:[],warningConfirmed:!1}),getters:{isPremappingValid(i){return!i.premapping.some(t=>t.mapping.some(e=>e.destinationUuid===null||e.destinationUuid===""))},isMigrationAllowed(i){var o;const t=i.dataSelectionTableData.map(l=>l.requiredSelection===!1?l.id:null),e=i.dataSelectionIds.some(l=>t.includes(l)),a=((o=i.environmentInformation)==null?void 0:o.migrationDisabled)===!1;return e&&a&&!i.isLoading&&i.isPremappingValid&&i.warningConfirmed}},actions:{setConnectionId(i){this.connectionId=i},setEnvironmentInformation(i){this.environmentInformation=i},setLastConnectionCheck(i){this.lastConnectionCheck=i},setIsLoading(i){this.isLoading=i},setDataSelectionIds(i){this.dataSelectionIds=i},setDataSelectionTableData(i){this.dataSelectionTableData=i},setPremapping(i){if(i==null||i.length<1){this.premapping=[];return}i.forEach(t=>{let e=this.premapping.find(a=>a.entity===t.entity);e?e.choices=t.choices:(e={choices:t.choices,entity:t.entity,mapping:[]},this.premapping.push(e)),t.mapping.forEach(a=>{const o=e.mapping.find(D=>D.sourceId===a.sourceId);if(o){o.destinationUuid||(o.destinationUuid=a.destinationUuid);return}const l={...a,id:`${e.entity}-${a.sourceId}`};a.destinationUuid?e.mapping.push(l):e.mapping.unshift(l)})})},setWarningConfirmed(i){this.warningConfirmed=i},async init(i=!1){this.isLoading=!0;const t=await this.fetchConnectionId();await this.fetchEnvironmentInformation(),(i||t)&&(this.premapping=[],this.dataSelectionIds=[],this.warningConfirmed=!1,await this.fetchDataSelectionIds()),this.isLoading=!1},async fetchConnectionId(){try{const i=new Jt(1,1),t=await Zt.search(i,Shopware.Context.api);if(t.length===0)return!1;const e=t.first().selectedConnectionId;return e===this.connectionId?!1:(this.connectionId=e,!0)}catch{return await this.createErrorNotification("swag-migration.api-error.fetchConnectionId"),this.connectionId=null,!1}},async fetchEnvironmentInformation(){if(this.environmentInformation={},this.connectionId!==null)try{this.environmentInformation=await P.checkConnection(this.connectionId),this.lastConnectionCheck=new Date}catch{await this.createErrorNotification("swag-migration.api-error.checkConnection")}},async fetchDataSelectionIds(){if(this.dataSelectionTableData=[],this.connectionId!==null)try{const i=await P.getDataSelection(this.connectionId);this.dataSelectionTableData=i,this.dataSelectionIds=i.filter(t=>t.requiredSelection).map(t=>t.id)}catch{await this.createErrorNotification("swag-migration.api-error.getDataSelection")}},async createErrorNotification(i){await this.$patch(()=>{Shopware.State.dispatch("notification/createNotification",{variant:"error",title:Shopware.Snippet.tc("global.default.error"),message:Shopware.Snippet.tc(i)})})}}},{Module:te,Store:ee}=Shopware;ee.register("swagMigration",ie);te.register("swag-migration",{type:"plugin",name:"swag-migration",title:"swag-migration.general.mainMenuItemGeneral",description:"swag-migration.general.descriptionTextModule",version:"0.9.0",targetVersion:"0.9.0",color:"#9AA8B5",icon:"regular-cog",routes:{index:{component:"swag-migration-index",path:"index",meta:{parentPath:"sw.settings.index"},redirect:{name:"swag.migration.index.main"},children:{main:{path:"main",component:"swag-migration-main-page",meta:{parentPath:"sw.settings.index",resetMigration:!1,privilege:"admin"}},resetMigration:{path:"reset-migration",component:"swag-migration-main-page",meta:{parentPath:"sw.settings.index",resetMigration:!0,privilege:"admin"}},history:{path:"history",component:"swag-migration-history",children:{detail:{path:"detail/:id",component:"swag-migration-history-detail",meta:{parentPath:"sw.settings.index",privilege:"admin"}}},meta:{parentPath:"sw.settings.index",privilege:"admin"}},dataSelector:{path:"dataSelector",component:"swag-migration-data-selector",meta:{parentPath:"sw.settings.index",privilege:"admin"}}}},processScreen:{path:"processScreen",component:"swag-migration-process-screen",meta:{parentPath:"sw.settings.index",privilege:"admin"}},wizard:{component:"swag-migration-wizard",path:"wizard",redirect:{name:"swag.migration.wizard.introduction"},children:{introduction:{path:"introduction",component:"swag-migration-wizard-page-introduction",meta:{privilege:"admin"}},profileInstallation:{path:"profile/installation",component:"swag-migration-wizard-page-profile-installation",meta:{privilege:"admin"}},connectionCreate:{path:"connection/create",component:"swag-migration-wizard-page-connection-create",meta:{privilege:"admin"}},connectionSelect:{path:"connection/select",component:"swag-migration-wizard-page-connection-select",meta:{privilege:"admin"}},profileInformation:{path:"profile/information",component:"swag-migration-wizard-page-profile-information",meta:{privilege:"admin"}},credentials:{path:"credentials",component:"swag-migration-wizard-page-credentials",meta:{privilege:"admin"}},credentialsSuccess:{path:"credentials/success",component:"swag-migration-wizard-page-credentials-success",meta:{privilege:"admin"}},credentialsError:{path:"credentials/error",component:"swag-migration-wizard-page-credentials-error",meta:{privilege:"admin"}}},meta:{privilege:"admin"}}},settingsItem:{group:"plugins",to:"swag.migration.index",iconComponent:"swag-migration-settings-icon",privilege:"admin"}});
